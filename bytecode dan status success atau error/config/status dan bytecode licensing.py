Python Code - Decompilation Success


0 LOAD_CONST 0 (0)
2 LOAD_CONST 1 (None)
4 IMPORT_NAME 0 (requests)
6 STORE_NAME 0 (requests)

8 LOAD_CONST 0 (0)
10 LOAD_CONST 1 (None)
12 IMPORT_NAME 1 (hashlib)
14 STORE_NAME 1 (hashlib)

16 LOAD_CONST 0 (0)
18 LOAD_CONST 2 (('Any', 'Dict', 'Optional'))
20 IMPORT_NAME 2 (typing)
22 IMPORT_FROM 3 (Any)
24 STORE_NAME 3 (Any)
26 IMPORT_FROM 4 (Dict)
28 STORE_NAME 4 (Dict)
30 IMPORT_FROM 5 (Optional)
32 STORE_NAME 5 (Optional)
34 POP_TOP

36 LOAD_CONST 0 (0)
38 LOAD_CONST 3 (('VERSION', 'BASE_URL', 'PRODUCT_CODE'))
40 IMPORT_NAME 6 (config.constants)
42 IMPORT_FROM 7 (VERSION)
44 STORE_NAME 7 (VERSION)
46 IMPORT_FROM 8 (BASE_URL)
48 STORE_NAME 8 (BASE_URL)
50 IMPORT_FROM 9 (PRODUCT_CODE)
52 STORE_NAME 9 (PRODUCT_CODE)
54 POP_TOP

56 LOAD_CONST 4 ("return")
58 LOAD_NAME 10 (str)
60 BUILD_TUPLE 2
62 LOAD_CONST 5 (code object get_machine_id)
64 MAKE_FUNCTION 4 (annotation)
66 STORE_NAME 11 (get_machine_id)

68 LOAD_CONST 4 ("return")
70 LOAD_NAME 10 (str)
72 BUILD_TUPLE 2
74 LOAD_CONST 6 (code object get_hashed_machine_id)
76 MAKE_FUNCTION 4 (annotation)
78 STORE_NAME 12 (get_hashed_machine_id)

80 LOAD_CONST 22 ((20,))
82 LOAD_CONST 8 ("path")
84 LOAD_NAME 10 (str)
86 LOAD_CONST 9 ("payload")
88 LOAD_NAME 4 (Dict)
90 LOAD_NAME 10 (str)
92 LOAD_NAME 3 (Any)
94 BUILD_TUPLE 2
96 BINARY_SUBSCR
98 LOAD_CONST 10 ("timeout")
100 LOAD_NAME 13 (int)
102 LOAD_CONST 4 ("return")
104 LOAD_NAME 0 (requests)
106 LOAD_ATTR 14 (Response)
108 BUILD_TUPLE 8
110 LOAD_CONST 11 (code object _post)
112 MAKE_FUNCTION 5 (default, annotation)
114 STORE_NAME 15 (_post)

116 LOAD_CONST 1 (None)

118 LOAD_CONST 1 (None)

120 LOAD_CONST 12 (('device_id', 'version'))
122 BUILD_CONST_KEY_MAP 2

124 LOAD_CONST 13 ("key")
126 LOAD_NAME 10 (str)

128 LOAD_CONST 14 ("product_code")
130 LOAD_NAME 10 (str)

132 LOAD_CONST 15 ("device_id")
134 LOAD_NAME 5 (Optional)
136 LOAD_NAME 10 (str)
138 BINARY_SUBSCR

140 LOAD_CONST 16 ("version")
142 LOAD_NAME 5 (Optional)
144 LOAD_NAME 10 (str)
146 BINARY_SUBSCR

148 LOAD_CONST 4 ("return")
150 LOAD_NAME 4 (Dict)
152 LOAD_NAME 10 (str)
154 LOAD_NAME 3 (Any)
156 BUILD_TUPLE 2
158 BINARY_SUBSCR

160 BUILD_TUPLE 10
162 LOAD_CONST 17 (code object check_license)
164 MAKE_FUNCTION 6 (keyword-only, annotation)
166 STORE_NAME 16 (check_license)

168 LOAD_CONST 1 (None)

170 LOAD_CONST 18 (('device_id',))
172 BUILD_CONST_KEY_MAP 1

174 LOAD_CONST 14 ("product_code")
176 LOAD_NAME 10 (str)

178 LOAD_CONST 15 ("device_id")
180 LOAD_NAME 5 (Optional)
182 LOAD_NAME 10 (str)
184 BINARY_SUBSCR

186 LOAD_CONST 4 ("return")
188 LOAD_NAME 4 (Dict)
190 LOAD_NAME 10 (str)
192 LOAD_NAME 3 (Any)
194 BUILD_TUPLE 2
196 BINARY_SUBSCR

198 BUILD_TUPLE 6
200 LOAD_CONST 19 (code object provision_trial)
202 MAKE_FUNCTION 6 (keyword-only, annotation)
204 STORE_NAME 17 (provision_trial)

206 LOAD_NAME 9 (PRODUCT_CODE)

208 LOAD_NAME 7 (VERSION)

210 LOAD_CONST 20 (('product_code', 'version'))
212 BUILD_CONST_KEY_MAP 2

214 LOAD_CONST 14 ("product_code")
216 LOAD_NAME 10 (str)

218 LOAD_CONST 16 ("version")
220 LOAD_NAME 5 (Optional)
222 LOAD_NAME 10 (str)
224 BINARY_SUBSCR

226 LOAD_CONST 4 ("return")
228 LOAD_NAME 4 (Dict)
230 LOAD_NAME 10 (str)
232 LOAD_NAME 3 (Any)
234 BUILD_TUPLE 2
236 BINARY_SUBSCR

238 BUILD_TUPLE 6
240 LOAD_CONST 21 (code object ensure_license)
242 MAKE_FUNCTION 6 (keyword-only, annotation)
244 STORE_NAME 18 (ensure_license)
246 LOAD_CONST 1 (None)
248 RETURN_VALUE


0 LOAD_CONST 1 (0)
2 LOAD_CONST 2 (None)
4 IMPORT_NAME 0 (machineid)
6 STORE_FAST 0 (machineid)

8 LOAD_FAST 0 (machineid)
10 LOAD_METHOD 1 (id)
12 CALL 0
14 RETURN_VALUE


0 LOAD_GLOBAL 1 (NULL + get_machine_id)
2 CALL 0
4 STORE_FAST 0 (raw)

6 LOAD_GLOBAL 3 (NULL + hashlib)
8 LOAD_ATTR 2 (sha256)
10 LOAD_FAST 0 (raw)
12 LOAD_METHOD 3 (encode)
14 LOAD_CONST 1 ("utf-8")
16 CALL 1
18 CALL 1
20 LOAD_METHOD 4 (hexdigest)
22 CALL 0
24 RETURN_VALUE


0 LOAD_GLOBAL 0 (BASE_URL)
2 FORMAT_VALUE 0
4 LOAD_FAST 0 (path)
6 FORMAT_VALUE 0
8 BUILD_STRING 2
10 STORE_FAST 3 (url)

12 LOAD_GLOBAL 3 (NULL + requests)
14 LOAD_ATTR 2 (post)
16 LOAD_FAST 3 (url)
18 LOAD_FAST 1 (payload)
20 LOAD_FAST 2 (timeout)
22 KW_NAMES 1 (('json', 'timeout'))
24 CALL 3
26 RETURN_VALUE


0 LOAD_FAST 0 (key)

2 LOAD_FAST 1 (product_code)

4 LOAD_CONST 1 (('key', 'product_code'))
6 BUILD_CONST_KEY_MAP 2
8 STORE_FAST 4 (payload)

10 LOAD_FAST 2 (device_id)
12 POP_JUMP_FORWARD_IF_FALSE 5 (to 22)

14 LOAD_FAST 2 (device_id)
16 LOAD_FAST 4 (payload)
18 LOAD_CONST 2 ("device_id")
20 STORE_SUBSCR

22 LOAD_FAST 3 (version)
24 POP_JUMP_FORWARD_IF_FALSE 5 (to 34)

26 LOAD_FAST 3 (version)
28 LOAD_FAST 4 (payload)
30 LOAD_CONST 3 ("version")
32 STORE_SUBSCR

34 LOAD_GLOBAL 1 (NULL + _post)
36 LOAD_CONST 4 ("/api/licenses/check")
38 LOAD_FAST 4 (payload)
40 CALL 2
42 STORE_FAST 5 (resp)

44 NOP

46 LOAD_FAST 5 (resp)
48 LOAD_METHOD 1 (json)
50 CALL 0
52 STORE_FAST 6 (data)
54 JUMP_FORWARD 18 (to 82)
56 PUSH_EXC_INFO

58 LOAD_GLOBAL 4 (Exception)
60 CHECK_EXC_MATCH
62 POP_JUMP_FORWARD_IF_FALSE 5 (to 74)
64 POP_TOP

66 BUILD_MAP 0
68 STORE_FAST 6 (data)
70 POP_EXCEPT
72 JUMP_FORWARD 4 (to 82)

74 RERAISE 0
76 COPY 3
78 POP_EXCEPT
80 RERAISE 1

82 LOAD_GLOBAL 7 (NULL + isinstance)
84 LOAD_FAST 6 (data)
86 LOAD_GLOBAL 8 (dict)
88 CALL 2
90 POP_JUMP_FORWARD_IF_FALSE 34 (to 106)
92 LOAD_GLOBAL 11 (NULL + bool)
94 LOAD_FAST 6 (data)
96 LOAD_METHOD 6 (get)
98 LOAD_CONST 5 ("valid")
100 CALL 1
102 CALL 1
104 JUMP_FORWARD 1 (to 108)
106 LOAD_CONST 6 (False)
108 STORE_FAST 7 (valid)

110 LOAD_GLOBAL 7 (NULL + isinstance)
112 LOAD_FAST 6 (data)
114 LOAD_GLOBAL 8 (dict)
116 CALL 2
118 POP_JUMP_FORWARD_IF_FALSE 21 (to 130)
120 LOAD_FAST 6 (data)
122 LOAD_METHOD 6 (get)
124 LOAD_CONST 7 ("plan")
126 CALL 1
128 JUMP_FORWARD 1 (to 132)
130 LOAD_CONST 8 (None)
132 STORE_FAST 8 (plan)

134 LOAD_GLOBAL 7 (NULL + isinstance)
136 LOAD_FAST 6 (data)
138 LOAD_GLOBAL 8 (dict)
140 CALL 2
142 POP_JUMP_FORWARD_IF_FALSE 21 (to 154)
144 LOAD_FAST 6 (data)
146 LOAD_METHOD 6 (get)
148 LOAD_CONST 9 ("status")
150 CALL 1
152 JUMP_FORWARD 1 (to 156)
154 LOAD_CONST 8 (None)
156 STORE_FAST 9 (status)

158 LOAD_GLOBAL 7 (NULL + isinstance)
160 LOAD_FAST 6 (data)
162 LOAD_GLOBAL 8 (dict)
164 CALL 2
166 POP_JUMP_FORWARD_IF_FALSE 21 (to 178)
168 LOAD_FAST 6 (data)
170 LOAD_METHOD 6 (get)
172 LOAD_CONST 10 ("expiresAt")
174 CALL 1
176 JUMP_FORWARD 1 (to 180)
178 LOAD_CONST 8 (None)
180 STORE_FAST 10 (expires_at)

182 LOAD_GLOBAL 7 (NULL + isinstance)
184 LOAD_FAST 6 (data)
186 LOAD_GLOBAL 8 (dict)
188 CALL 2
190 POP_JUMP_FORWARD_IF_FALSE 21 (to 202)
192 LOAD_FAST 6 (data)
194 LOAD_METHOD 6 (get)
196 LOAD_CONST 11 ("reason")
198 CALL 1
200 JUMP_FORWARD 1 (to 204)
202 LOAD_CONST 8 (None)
204 STORE_FAST 11 (reason)

206 LOAD_FAST 5 (resp)
208 LOAD_ATTR 7 (ok)

210 LOAD_FAST 5 (resp)
212 LOAD_ATTR 8 (status_code)

214 LOAD_FAST 7 (valid)

216 LOAD_FAST 8 (plan)

218 LOAD_FAST 9 (status)

220 LOAD_FAST 10 (expires_at)

222 LOAD_FAST 11 (reason)

224 LOAD_FAST 6 (data)

226 LOAD_CONST 12 (('ok', 'http_status', 'valid', 'plan', 'status', 'expiresAt', 'reason', 'raw'))
228 BUILD_CONST_KEY_MAP 8
230 RETURN_VALUE


0 LOAD_FAST 0 (product_code)

2 LOAD_CONST 1 ("trial")
4 LOAD_CONST 2 (('product_code', 'plan'))
6 BUILD_CONST_KEY_MAP 2
8 STORE_FAST 2 (payload)

10 LOAD_FAST 1 (device_id)
12 POP_JUMP_FORWARD_IF_FALSE 5 (to 22)

14 LOAD_FAST 1 (device_id)
16 LOAD_FAST 2 (payload)
18 LOAD_CONST 3 ("device_id")
20 STORE_SUBSCR

22 LOAD_GLOBAL 1 (NULL + _post)
24 LOAD_CONST 4 ("/api/licenses/provision")
26 LOAD_FAST 2 (payload)
28 CALL 2
30 STORE_FAST 3 (resp)

32 NOP

34 LOAD_FAST 3 (resp)
36 LOAD_METHOD 1 (json)
38 CALL 0
40 STORE_FAST 4 (data)
42 JUMP_FORWARD 18 (to 70)
44 PUSH_EXC_INFO

46 LOAD_GLOBAL 4 (Exception)
48 CHECK_EXC_MATCH
50 POP_JUMP_FORWARD_IF_FALSE 5 (to 62)
52 POP_TOP

54 BUILD_MAP 0
56 STORE_FAST 4 (data)
58 POP_EXCEPT
60 JUMP_FORWARD 4 (to 70)

62 RERAISE 0
64 COPY 3
66 POP_EXCEPT
68 RERAISE 1

70 LOAD_GLOBAL 7 (NULL + isinstance)
72 LOAD_FAST 4 (data)
74 LOAD_GLOBAL 8 (dict)
76 CALL 2
78 POP_JUMP_FORWARD_IF_FALSE 21 (to 90)
80 LOAD_FAST 4 (data)
82 LOAD_METHOD 5 (get)
84 LOAD_CONST 5 ("key")
86 CALL 1
88 JUMP_FORWARD 1 (to 92)
90 LOAD_CONST 6 (None)
92 STORE_FAST 5 (key)

94 LOAD_GLOBAL 7 (NULL + isinstance)
96 LOAD_FAST 4 (data)
98 LOAD_GLOBAL 8 (dict)
100 CALL 2
102 POP_JUMP_FORWARD_IF_FALSE 21 (to 114)
104 LOAD_FAST 4 (data)
106 LOAD_METHOD 5 (get)
108 LOAD_CONST 7 ("plan")
110 CALL 1
112 JUMP_FORWARD 1 (to 116)
114 LOAD_CONST 1 ("trial")
116 STORE_FAST 6 (plan)

118 LOAD_GLOBAL 7 (NULL + isinstance)
120 LOAD_FAST 4 (data)
122 LOAD_GLOBAL 8 (dict)
124 CALL 2
126 POP_JUMP_FORWARD_IF_FALSE 42 (to 148)
128 LOAD_FAST 4 (data)
130 LOAD_METHOD 5 (get)
132 LOAD_CONST 8 ("expires_at")
134 CALL 1
136 JUMP_IF_TRUE_OR_POP 20 (to 146)
138 LOAD_FAST 4 (data)
140 LOAD_METHOD 5 (get)
142 LOAD_CONST 9 ("expiresAt")
144 CALL 1
146 JUMP_FORWARD 1 (to 150)
148 LOAD_CONST 6 (None)
150 STORE_FAST 7 (expires_at)

152 LOAD_GLOBAL 7 (NULL + isinstance)
154 LOAD_FAST 4 (data)
156 LOAD_GLOBAL 8 (dict)
158 CALL 2
160 POP_JUMP_FORWARD_IF_FALSE 34 (to 176)
162 LOAD_GLOBAL 13 (NULL + bool)
164 LOAD_FAST 4 (data)
166 LOAD_METHOD 5 (get)
168 LOAD_CONST 10 ("ok")
170 CALL 1
172 CALL 1
174 JUMP_FORWARD 8 (to 184)
176 LOAD_FAST 3 (resp)
178 LOAD_ATTR 7 (status_code)
180 LOAD_CONST 11 ((200, 201))
182 CONTAINS_OP 0 (in)
184 STORE_FAST 8 (ok)

186 LOAD_FAST 8 (ok)

188 LOAD_FAST 3 (resp)
190 LOAD_ATTR 7 (status_code)

192 LOAD_FAST 5 (key)

194 LOAD_FAST 6 (plan)

196 LOAD_FAST 7 (expires_at)

198 LOAD_FAST 4 (data)

200 LOAD_CONST 12 (('ok', 'http_status', 'key', 'plan', 'expiresAt', 'raw'))
202 BUILD_CONST_KEY_MAP 6
204 RETURN_VALUE


0 NOP

2 LOAD_GLOBAL 1 (NULL + get_hashed_machine_id)
4 CALL 0
6 STORE_FAST 2 (mid)
8 JUMP_FORWARD 36 (to 72)
10 PUSH_EXC_INFO

12 LOAD_GLOBAL 2 (Exception)
14 CHECK_EXC_MATCH
16 POP_JUMP_FORWARD_IF_FALSE 23 (to 64)
18 STORE_FAST 3 (e)

20 LOAD_CONST 1 (False)

22 LOAD_CONST 1 (False)

24 LOAD_CONST 2 (None)

26 LOAD_CONST 3 ("error")
28 LOAD_CONST 2 (None)

30 LOAD_CONST 4 ("Machine ID error: ")
32 LOAD_FAST 3 (e)
34 FORMAT_VALUE 0
36 BUILD_STRING 2

38 LOAD_CONST 2 (None)

40 LOAD_CONST 5 (('is_allowed', 'valid', 'plan', 'status', 'expiresAt', 'reason', 'check'))
42 BUILD_CONST_KEY_MAP 7
44 SWAP 2
46 POP_EXCEPT
48 LOAD_CONST 2 (None)
50 STORE_FAST 3 (e)
52 DELETE_FAST 3 (e)
54 RETURN_VALUE
56 LOAD_CONST 2 (None)
58 STORE_FAST 3 (e)
60 DELETE_FAST 3 (e)
62 RERAISE 1

64 RERAISE 0
66 COPY 3
68 POP_EXCEPT
70 RERAISE 1

72 LOAD_FAST 2 (mid)
74 STORE_FAST 4 (key)

76 LOAD_FAST 2 (mid)
78 STORE_FAST 5 (device_id)

80 NOP

82 LOAD_GLOBAL 5 (NULL + check_license)
84 LOAD_FAST 4 (key)
86 LOAD_FAST 0 (product_code)
88 LOAD_FAST 5 (device_id)
90 LOAD_FAST 1 (version)
92 KW_NAMES 6 (('device_id', 'version'))
94 CALL 4
96 STORE_FAST 6 (chk)
98 JUMP_FORWARD 36 (to 162)
100 PUSH_EXC_INFO

102 LOAD_GLOBAL 2 (Exception)
104 CHECK_EXC_MATCH
106 POP_JUMP_FORWARD_IF_FALSE 23 (to 154)
108 STORE_FAST 3 (e)

110 LOAD_CONST 1 (False)

112 LOAD_CONST 1 (False)

114 LOAD_CONST 2 (None)

116 LOAD_CONST 3 ("error")
118 LOAD_CONST 2 (None)

120 LOAD_CONST 7 ("API error: ")
122 LOAD_FAST 3 (e)
124 FORMAT_VALUE 0
126 BUILD_STRING 2

128 LOAD_CONST 2 (None)

130 LOAD_CONST 5 (('is_allowed', 'valid', 'plan', 'status', 'expiresAt', 'reason', 'check'))
132 BUILD_CONST_KEY_MAP 7
134 SWAP 2
136 POP_EXCEPT
138 LOAD_CONST 2 (None)
140 STORE_FAST 3 (e)
142 DELETE_FAST 3 (e)
144 RETURN_VALUE
146 LOAD_CONST 2 (None)
148 STORE_FAST 3 (e)
150 DELETE_FAST 3 (e)
152 RERAISE 1

154 RERAISE 0
156 COPY 3
158 POP_EXCEPT
160 RERAISE 1

162 LOAD_FAST 6 (chk)
164 LOAD_METHOD 3 (get)
166 LOAD_CONST 8 ("valid")
168 CALL 1
170 POP_JUMP_FORWARD_IF_TRUE 112 (to 332)

172 NOP

174 LOAD_GLOBAL 9 (NULL + provision_trial)
176 LOAD_FAST 0 (product_code)
178 LOAD_FAST 5 (device_id)
180 KW_NAMES 9 (('device_id',))
182 CALL 2
184 POP_TOP
186 JUMP_FORWARD 36 (to 250)
188 PUSH_EXC_INFO

190 LOAD_GLOBAL 2 (Exception)
192 CHECK_EXC_MATCH
194 POP_JUMP_FORWARD_IF_FALSE 23 (to 242)
196 STORE_FAST 3 (e)

198 LOAD_CONST 1 (False)

200 LOAD_CONST 1 (False)

202 LOAD_CONST 2 (None)

204 LOAD_CONST 3 ("error")
206 LOAD_CONST 2 (None)

208 LOAD_CONST 10 ("Provision error: ")
210 LOAD_FAST 3 (e)
212 FORMAT_VALUE 0
214 BUILD_STRING 2

216 LOAD_FAST 6 (chk)

218 LOAD_CONST 5 (('is_allowed', 'valid', 'plan', 'status', 'expiresAt', 'reason', 'check'))
220 BUILD_CONST_KEY_MAP 7
222 SWAP 2
224 POP_EXCEPT
226 LOAD_CONST 2 (None)
228 STORE_FAST 3 (e)
230 DELETE_FAST 3 (e)
232 RETURN_VALUE
234 LOAD_CONST 2 (None)
236 STORE_FAST 3 (e)
238 DELETE_FAST 3 (e)
240 RERAISE 1

242 RERAISE 0
244 COPY 3
246 POP_EXCEPT
248 RERAISE 1

250 NOP

252 LOAD_GLOBAL 5 (NULL + check_license)
254 LOAD_FAST 4 (key)
256 LOAD_FAST 0 (product_code)
258 LOAD_FAST 5 (device_id)
260 LOAD_FAST 1 (version)
262 KW_NAMES 6 (('device_id', 'version'))
264 CALL 4
266 STORE_FAST 6 (chk)
268 JUMP_FORWARD 36 (to 332)
270 PUSH_EXC_INFO

272 LOAD_GLOBAL 2 (Exception)
274 CHECK_EXC_MATCH
276 POP_JUMP_FORWARD_IF_FALSE 23 (to 324)
278 STORE_FAST 3 (e)

280 LOAD_CONST 1 (False)

282 LOAD_CONST 1 (False)

284 LOAD_CONST 2 (None)

286 LOAD_CONST 3 ("error")
288 LOAD_CONST 2 (None)

290 LOAD_CONST 11 ("Recheck error: ")
292 LOAD_FAST 3 (e)
294 FORMAT_VALUE 0
296 BUILD_STRING 2

298 LOAD_CONST 2 (None)

300 LOAD_CONST 5 (('is_allowed', 'valid', 'plan', 'status', 'expiresAt', 'reason', 'check'))
302 BUILD_CONST_KEY_MAP 7
304 SWAP 2
306 POP_EXCEPT
308 LOAD_CONST 2 (None)
310 STORE_FAST 3 (e)
312 DELETE_FAST 3 (e)
314 RETURN_VALUE
316 LOAD_CONST 2 (None)
318 STORE_FAST 3 (e)
320 DELETE_FAST 3 (e)
322 RERAISE 1

324 RERAISE 0
326 COPY 3
328 POP_EXCEPT
330 RERAISE 1

332 LOAD_GLOBAL 11 (NULL + bool)
334 LOAD_FAST 6 (chk)
336 LOAD_METHOD 3 (get)
338 LOAD_CONST 8 ("valid")
340 CALL 1
342 CALL 1
344 STORE_FAST 7 (valid)

346 LOAD_FAST 6 (chk)
348 LOAD_METHOD 3 (get)
350 LOAD_CONST 12 ("plan")
352 CALL 1
354 STORE_FAST 8 (plan_val)

356 LOAD_GLOBAL 13 (NULL + isinstance)
358 LOAD_FAST 8 (plan_val)
360 LOAD_GLOBAL 14 (str)
362 CALL 2
364 POP_JUMP_FORWARD_IF_FALSE 20 (to 374)
366 LOAD_FAST 8 (plan_val)
368 LOAD_METHOD 8 (lower)
370 CALL 0
372 JUMP_FORWARD 1 (to 376)
374 LOAD_FAST 8 (plan_val)
376 STORE_FAST 9 (plan)

378 LOAD_FAST 6 (chk)
380 LOAD_METHOD 3 (get)
382 LOAD_CONST 13 ("status")
384 CALL 1
386 STORE_FAST 10 (status_val)

388 LOAD_GLOBAL 13 (NULL + isinstance)
390 LOAD_FAST 10 (status_val)
392 LOAD_GLOBAL 14 (str)
394 CALL 2
396 POP_JUMP_FORWARD_IF_FALSE 20 (to 406)
398 LOAD_FAST 10 (status_val)
400 LOAD_METHOD 8 (lower)
402 CALL 0
404 JUMP_FORWARD 1 (to 408)
406 LOAD_FAST 10 (status_val)
408 STORE_FAST 11 (status)

410 LOAD_FAST 7 (valid)
412 JUMP_IF_FALSE_OR_POP 9 (to 428)
414 LOAD_FAST 9 (plan)
416 LOAD_CONST 14 (('free',))
418 CONTAINS_OP 1 (not in)
420 JUMP_IF_FALSE_OR_POP 5 (to 428)
422 LOAD_FAST 11 (status)
424 LOAD_CONST 15 ("suspended")
426 COMPARE_OP 3 (!=)
428 STORE_FAST 12 (is_allowed)

430 LOAD_FAST 12 (is_allowed)

432 LOAD_FAST 7 (valid)

434 LOAD_FAST 9 (plan)

436 LOAD_FAST 11 (status)

438 LOAD_FAST 6 (chk)
440 LOAD_METHOD 3 (get)
442 LOAD_CONST 16 ("expiresAt")
444 CALL 1

446 LOAD_FAST 6 (chk)
448 LOAD_METHOD 3 (get)
450 LOAD_CONST 17 ("reason")
452 CALL 1

454 LOAD_FAST 6 (chk)

456 LOAD_CONST 5 (('is_allowed', 'valid', 'plan', 'status', 'expiresAt', 'reason', 'check'))
458 BUILD_CONST_KEY_MAP 7
460 RETURN_VALUE