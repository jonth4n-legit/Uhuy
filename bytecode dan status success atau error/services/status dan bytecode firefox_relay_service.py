<module>: Success: Equal

<module>.FirefoxRelayService: Success: Equal

<module>.FirefoxRelayService.__init__: Success: Equal

<module>.FirefoxRelayService.create_relay_mask: Success: Equal

<module>.FirefoxRelayService.list_relay_masks: Success: Equal

<module>.FirefoxRelayService.test_connection: Success: Equal

<module>.FirefoxRelayService.delete_relay_mask: Success: Equal

***<module>.FirefoxRelayService.delete_all_masks: Failure detected at line number 227 and instruction offset 66: Different bytecode

<module>.FirefoxRelayService.auto_purge_if_limit_reached: Success: Equal

<module>.FirefoxRelayService.update_relay_mask: Success: Equal

<module>.FirefoxRelayService.get_relay_mask_details: Success: Equal




0 LOAD_CONST 0 ("\nService untuk mengelola email relay menggunakan Firefox Relay API\n")
2 STORE_NAME 0 (__doc__)

4 LOAD_CONST 1 (0)
6 LOAD_CONST 2 (None)
8 IMPORT_NAME 1 (requests)
10 STORE_NAME 1 (requests)

12 LOAD_CONST 1 (0)
14 LOAD_CONST 3 (('Dict', 'Optional', 'List', 'Any'))
16 IMPORT_NAME 2 (typing)
18 IMPORT_FROM 3 (Dict)
20 STORE_NAME 3 (Dict)
22 IMPORT_FROM 4 (Optional)
24 STORE_NAME 4 (Optional)
26 IMPORT_FROM 5 (List)
28 STORE_NAME 5 (List)
30 IMPORT_FROM 6 (Any)
32 STORE_NAME 6 (Any)
34 POP_TOP

36 LOAD_CONST 1 (0)
38 LOAD_CONST 2 (None)
40 IMPORT_NAME 7 (logging)
42 STORE_NAME 7 (logging)

44 LOAD_CONST 1 (0)
46 LOAD_CONST 4 (('FIREFOX_RELAY_API_KEY', 'FIREFOX_RELAY_BASE_URL'))
48 IMPORT_NAME 8 (config.constants)
50 IMPORT_FROM 9 (FIREFOX_RELAY_API_KEY)
52 STORE_NAME 9 (FIREFOX_RELAY_API_KEY)
54 IMPORT_FROM 10 (FIREFOX_RELAY_BASE_URL)
56 STORE_NAME 10 (FIREFOX_RELAY_BASE_URL)
58 POP_TOP

60 PUSH_NULL
62 LOAD_NAME 7 (logging)
64 LOAD_ATTR 11 (getLogger)
66 LOAD_NAME 12 (__name__)
68 CALL 1
70 STORE_NAME 13 (logger)

72 PUSH_NULL
74 LOAD_BUILD_CLASS
76 LOAD_CONST 5 (code object FirefoxRelayService)
78 MAKE_FUNCTION 0 (No arguments)
80 LOAD_CONST 6 ("FirefoxRelayService")
82 CALL 2
84 STORE_NAME 14 (FirefoxRelayService)

86 LOAD_NAME 12 (__name__)
88 LOAD_CONST 7 ("__main__")
90 COMPARE_OP 2 (==)
92 POP_JUMP_FORWARD_IF_FALSE 164 (to 270)

94 NOP

96 PUSH_NULL
98 LOAD_NAME 14 (FirefoxRelayService)
100 CALL 0
102 STORE_NAME 15 (service)

104 LOAD_NAME 15 (service)
106 LOAD_METHOD 16 (create_relay_mask)
108 LOAD_CONST 8 ("Auto registration mask")
110 CALL 1
112 STORE_NAME 17 (mask)

114 LOAD_NAME 17 (mask)
116 POP_JUMP_FORWARD_IF_FALSE 73 (to 192)

118 PUSH_NULL
120 LOAD_NAME 18 (print)
122 LOAD_CONST 9 ("Created new email mask:")
124 CALL 1
126 POP_TOP

128 PUSH_NULL
130 LOAD_NAME 18 (print)
132 LOAD_CONST 10 ("Address: ")
134 LOAD_NAME 17 (mask)
136 LOAD_CONST 11 ("full_address")
138 BINARY_SUBSCR
140 FORMAT_VALUE 0
142 BUILD_STRING 2
144 CALL 1
146 POP_TOP

148 PUSH_NULL
150 LOAD_NAME 18 (print)
152 LOAD_CONST 12 ("ID: ")
154 LOAD_NAME 17 (mask)
156 LOAD_CONST 13 ("id")
158 BINARY_SUBSCR
160 FORMAT_VALUE 0
162 BUILD_STRING 2
164 CALL 1
166 POP_TOP

168 PUSH_NULL
170 LOAD_NAME 18 (print)
172 LOAD_CONST 14 ("Description: ")
174 LOAD_NAME 17 (mask)
176 LOAD_CONST 15 ("description")
178 BINARY_SUBSCR
180 FORMAT_VALUE 0
182 BUILD_STRING 2
184 CALL 1
186 POP_TOP
188 LOAD_CONST 2 (None)
190 RETURN_VALUE

192 PUSH_NULL
194 LOAD_NAME 18 (print)
196 LOAD_CONST 16 ("Failed to create email mask")
198 CALL 1
200 POP_TOP
202 LOAD_CONST 2 (None)
204 RETURN_VALUE
206 PUSH_EXC_INFO

208 LOAD_NAME 19 (Exception)
210 CHECK_EXC_MATCH
212 POP_JUMP_FORWARD_IF_FALSE 36 (to 262)
214 STORE_NAME 20 (e)

216 PUSH_NULL
218 LOAD_NAME 18 (print)
220 LOAD_CONST 17 ("Error: ")
222 LOAD_NAME 20 (e)
224 FORMAT_VALUE 0
226 BUILD_STRING 2
228 CALL 1
230 POP_TOP

232 PUSH_NULL
234 LOAD_NAME 18 (print)
236 LOAD_CONST 18 ("Pastikan API key sudah diset di file .env")
238 CALL 1
240 POP_TOP
242 POP_EXCEPT
244 LOAD_CONST 2 (None)
246 STORE_NAME 20 (e)
248 DELETE_NAME 20 (e)
250 LOAD_CONST 2 (None)
252 RETURN_VALUE
254 LOAD_CONST 2 (None)
256 STORE_NAME 20 (e)
258 DELETE_NAME 20 (e)
260 RERAISE 1

262 RERAISE 0
264 COPY 3
266 POP_EXCEPT
268 RERAISE 1

270 LOAD_CONST 2 (None)
272 RETURN_VALUE


0 LOAD_NAME 0 (__name__)
2 STORE_NAME 1 (__module__)
4 LOAD_CONST 0 ("FirefoxRelayService")
6 STORE_NAME 2 (__qualname__)

8 LOAD_CONST 1 ("Service untuk membuat dan mengelola email relay dari Firefox")
10 STORE_NAME 3 (__doc__)

12 LOAD_CONST 20 ((None, None))
14 LOAD_CONST 3 ("api_key")
16 LOAD_NAME 4 (Optional)
18 LOAD_NAME 5 (str)
20 BINARY_SUBSCR
22 LOAD_CONST 4 ("base_url")
24 LOAD_NAME 4 (Optional)
26 LOAD_NAME 5 (str)
28 BINARY_SUBSCR
30 BUILD_TUPLE 4
32 LOAD_CONST 5 (code object __init__)
34 MAKE_FUNCTION 5 (default, annotation)
36 STORE_NAME 6 (__init__)

38 LOAD_CONST 21 ((None,))
40 LOAD_CONST 6 ("description")
42 LOAD_NAME 5 (str)
44 LOAD_CONST 7 ("return")
46 LOAD_NAME 4 (Optional)
48 LOAD_NAME 7 (Dict)
50 BINARY_SUBSCR
52 BUILD_TUPLE 4
54 LOAD_CONST 8 (code object create_relay_mask)
56 MAKE_FUNCTION 5 (default, annotation)
58 STORE_NAME 8 (create_relay_mask)

60 LOAD_CONST 7 ("return")
62 LOAD_NAME 9 (List)
64 LOAD_NAME 7 (Dict)
66 BINARY_SUBSCR
68 BUILD_TUPLE 2
70 LOAD_CONST 9 (code object list_relay_masks)
72 MAKE_FUNCTION 4 (annotation)
74 STORE_NAME 10 (list_relay_masks)

76 LOAD_CONST 7 ("return")
78 LOAD_NAME 7 (Dict)
80 LOAD_NAME 5 (str)
82 LOAD_NAME 11 (any)
84 BUILD_TUPLE 2
86 BINARY_SUBSCR
88 BUILD_TUPLE 2
90 LOAD_CONST 10 (code object test_connection)
92 MAKE_FUNCTION 4 (annotation)
94 STORE_NAME 12 (test_connection)

96 LOAD_CONST 11 ("mask_id")
98 LOAD_NAME 5 (str)
100 LOAD_CONST 7 ("return")
102 LOAD_NAME 13 (bool)
104 BUILD_TUPLE 4
106 LOAD_CONST 12 (code object delete_relay_mask)
108 MAKE_FUNCTION 4 (annotation)
110 STORE_NAME 14 (delete_relay_mask)

112 LOAD_CONST 7 ("return")
114 LOAD_NAME 7 (Dict)
116 LOAD_NAME 5 (str)
118 LOAD_NAME 11 (any)
120 BUILD_TUPLE 2
122 BINARY_SUBSCR
124 BUILD_TUPLE 2
126 LOAD_CONST 13 (code object delete_all_masks)
128 MAKE_FUNCTION 4 (annotation)
130 STORE_NAME 15 (delete_all_masks)

132 LOAD_CONST 22 ((5,))
134 LOAD_CONST 15 ("limit")
136 LOAD_NAME 16 (int)
138 LOAD_CONST 7 ("return")
140 LOAD_NAME 7 (Dict)
142 LOAD_NAME 5 (str)
144 LOAD_NAME 17 (Any)
146 BUILD_TUPLE 2
148 BINARY_SUBSCR
150 BUILD_TUPLE 4
152 LOAD_CONST 16 (code object auto_purge_if_limit_reached)
154 MAKE_FUNCTION 5 (default, annotation)
156 STORE_NAME 18 (auto_purge_if_limit_reached)

158 NOP

160 NOP

162 LOAD_CONST 20 ((None, None))
164 LOAD_CONST 11 ("mask_id")
166 LOAD_NAME 5 (str)
168 LOAD_CONST 17 ("enabled")
170 LOAD_NAME 13 (bool)

172 LOAD_CONST 6 ("description")
174 LOAD_NAME 5 (str)

176 LOAD_CONST 7 ("return")
178 LOAD_NAME 4 (Optional)
180 LOAD_NAME 7 (Dict)
182 BINARY_SUBSCR

184 BUILD_TUPLE 8
186 LOAD_CONST 18 (code object update_relay_mask)
188 MAKE_FUNCTION 5 (default, annotation)
190 STORE_NAME 19 (update_relay_mask)

192 LOAD_CONST 11 ("mask_id")
194 LOAD_NAME 5 (str)
196 LOAD_CONST 7 ("return")
198 LOAD_NAME 4 (Optional)
200 LOAD_NAME 7 (Dict)
202 BINARY_SUBSCR
204 BUILD_TUPLE 4
206 LOAD_CONST 19 (code object get_relay_mask_details)
208 MAKE_FUNCTION 4 (annotation)
210 STORE_NAME 20 (get_relay_mask_details)
212 LOAD_CONST 2 (None)
214 RETURN_VALUE


0 LOAD_FAST 1 (api_key)
2 JUMP_IF_TRUE_OR_POP 6 (to 6)
4 LOAD_GLOBAL 0 (FIREFOX_RELAY_API_KEY)
6 LOAD_FAST 0 (self)
8 STORE_ATTR 1 (api_key)

10 LOAD_FAST 2 (base_url)
12 JUMP_IF_TRUE_OR_POP 6 (to 16)
14 LOAD_GLOBAL 4 (FIREFOX_RELAY_BASE_URL)
16 LOAD_FAST 0 (self)
18 STORE_ATTR 3 (base_url)

20 LOAD_FAST 0 (self)
22 LOAD_ATTR 1 (api_key)
24 POP_JUMP_FORWARD_IF_TRUE 15 (to 34)

26 LOAD_GLOBAL 9 (NULL + ValueError)
28 LOAD_CONST 1 ("Firefox Relay API key diperlukan")
30 CALL 1
32 RAISE_VARARGS 1 (exception instance)

34 LOAD_GLOBAL 11 (NULL + requests)
36 LOAD_ATTR 6 (Session)
38 CALL 0
40 LOAD_FAST 0 (self)
42 STORE_ATTR 7 (session)

44 LOAD_FAST 0 (self)
46 LOAD_ATTR 7 (session)
48 LOAD_ATTR 8 (headers)
50 LOAD_METHOD 9 (update)

52 LOAD_CONST 2 ("Bearer ")
54 LOAD_FAST 0 (self)
56 LOAD_ATTR 1 (api_key)
58 FORMAT_VALUE 0
60 BUILD_STRING 2

62 LOAD_CONST 3 ("application/json")

64 LOAD_CONST 3 ("application/json")
66 LOAD_CONST 4 (('Authorization', 'Content-Type', 'Accept'))
68 BUILD_CONST_KEY_MAP 3
70 CALL 1
72 POP_TOP
74 LOAD_CONST 5 (None)
76 RETURN_VALUE


0 LOAD_GLOBAL 0 (logger)
2 LOAD_METHOD 1 (info)
4 LOAD_CONST 1 ("Creating relay mask with description: ")
6 LOAD_FAST 1 (description)
8 FORMAT_VALUE 0
10 BUILD_STRING 2
12 CALL 1
14 POP_TOP

16 NOP

18 LOAD_FAST 0 (self)
20 LOAD_ATTR 2 (base_url)
22 FORMAT_VALUE 0
24 LOAD_CONST 2 ("/api/v1/relayaddresses/")
26 BUILD_STRING 2
28 STORE_FAST 2 (url)

30 LOAD_GLOBAL 0 (logger)
32 LOAD_METHOD 1 (info)
34 LOAD_CONST 3 ("Request URL: ")
36 LOAD_FAST 2 (url)
38 FORMAT_VALUE 0
40 BUILD_STRING 2
42 CALL 1
44 POP_TOP

46 BUILD_MAP 0
48 STORE_FAST 3 (data)

50 LOAD_FAST 1 (description)
52 POP_JUMP_FORWARD_IF_FALSE 5 (to 62)

54 LOAD_FAST 1 (description)
56 LOAD_FAST 3 (data)
58 LOAD_CONST 4 ("description")
60 STORE_SUBSCR

62 LOAD_GLOBAL 0 (logger)
64 LOAD_METHOD 1 (info)
66 LOAD_CONST 5 ("Request data: ")
68 LOAD_FAST 3 (data)
70 FORMAT_VALUE 0
72 BUILD_STRING 2
74 CALL 1
76 POP_TOP

78 LOAD_GLOBAL 0 (logger)
80 LOAD_METHOD 1 (info)
82 LOAD_CONST 6 ("Request headers: ")
84 LOAD_GLOBAL 7 (NULL + dict)
86 LOAD_FAST 0 (self)
88 LOAD_ATTR 4 (session)
90 LOAD_ATTR 5 (headers)
92 CALL 1
94 FORMAT_VALUE 0
96 BUILD_STRING 2
98 CALL 1
100 POP_TOP

102 LOAD_FAST 0 (self)
104 LOAD_ATTR 4 (session)
106 LOAD_METHOD 6 (post)
108 LOAD_FAST 2 (url)
110 LOAD_FAST 3 (data)
112 LOAD_CONST 7 (10)
114 KW_NAMES 8 (('json', 'timeout'))
116 CALL 3
118 STORE_FAST 4 (response)

120 LOAD_GLOBAL 0 (logger)
122 LOAD_METHOD 1 (info)
124 LOAD_CONST 9 ("Response status: ")
126 LOAD_FAST 4 (response)
128 LOAD_ATTR 7 (status_code)
130 FORMAT_VALUE 0
132 BUILD_STRING 2
134 CALL 1
136 POP_TOP

138 LOAD_GLOBAL 0 (logger)
140 LOAD_METHOD 1 (info)
142 LOAD_CONST 10 ("Response headers: ")
144 LOAD_GLOBAL 7 (NULL + dict)
146 LOAD_FAST 4 (response)
148 LOAD_ATTR 5 (headers)
150 CALL 1
152 FORMAT_VALUE 0
154 BUILD_STRING 2
156 CALL 1
158 POP_TOP

160 LOAD_FAST 4 (response)
162 LOAD_ATTR 7 (status_code)
164 LOAD_CONST 11 (401)
166 COMPARE_OP 2 (==)
168 POP_JUMP_FORWARD_IF_FALSE 317 (to 386)

170 LOAD_CONST 12 ("Token ")
172 LOAD_FAST 0 (self)
174 LOAD_ATTR 8 (api_key)
176 FORMAT_VALUE 0
178 BUILD_STRING 2

180 LOAD_CONST 13 ("Bearer ")
182 LOAD_FAST 0 (self)
184 LOAD_ATTR 8 (api_key)
186 FORMAT_VALUE 0
188 BUILD_STRING 2

190 LOAD_CONST 14 ("API-Key ")
192 LOAD_FAST 0 (self)
194 LOAD_ATTR 8 (api_key)
196 FORMAT_VALUE 0
198 BUILD_STRING 2

200 LOAD_FAST 0 (self)
202 LOAD_ATTR 8 (api_key)

204 BUILD_LIST 4
206 STORE_FAST 5 (auth_formats)

208 LOAD_FAST 5 (auth_formats)
210 GET_ITER
212 FOR_ITER 233 (to 368)
214 STORE_FAST 6 (auth_format)

216 LOAD_GLOBAL 0 (logger)
218 LOAD_METHOD 1 (info)
220 LOAD_CONST 15 ("Trying auth format: ")
222 LOAD_FAST 6 (auth_format)
224 LOAD_CONST 16 (None)
226 LOAD_CONST 17 (20)
228 BUILD_SLICE 2
230 BINARY_SUBSCR
232 FORMAT_VALUE 0
234 LOAD_CONST 18 ("...")
236 BUILD_STRING 3
238 CALL 1
240 POP_TOP

242 LOAD_GLOBAL 19 (NULL + requests)
244 LOAD_ATTR 10 (Session)
246 CALL 0
248 STORE_FAST 7 (test_session)

250 LOAD_FAST 7 (test_session)
252 LOAD_ATTR 5 (headers)
254 LOAD_METHOD 11 (update)

256 LOAD_FAST 6 (auth_format)

258 LOAD_CONST 19 ("application/json")

260 LOAD_CONST 19 ("application/json")
262 LOAD_CONST 20 (('Authorization', 'Content-Type', 'Accept'))
264 BUILD_CONST_KEY_MAP 3
266 CALL 1
268 POP_TOP

270 LOAD_FAST 7 (test_session)
272 LOAD_METHOD 6 (post)
274 LOAD_FAST 2 (url)
276 LOAD_FAST 3 (data)
278 LOAD_CONST 7 (10)
280 KW_NAMES 8 (('json', 'timeout'))
282 CALL 3
284 STORE_FAST 8 (test_response)

286 LOAD_GLOBAL 0 (logger)
288 LOAD_METHOD 1 (info)
290 LOAD_CONST 21 ("Test response status: ")
292 LOAD_FAST 8 (test_response)
294 LOAD_ATTR 7 (status_code)
296 FORMAT_VALUE 0
298 BUILD_STRING 2
300 CALL 1
302 POP_TOP

304 LOAD_FAST 8 (test_response)
306 LOAD_ATTR 7 (status_code)
308 LOAD_CONST 11 (401)
310 COMPARE_OP 3 (!=)
312 POP_JUMP_FORWARD_IF_FALSE 75 (to 366)

314 LOAD_GLOBAL 0 (logger)
316 LOAD_METHOD 1 (info)
318 LOAD_CONST 22 ("Success with auth format: ")
320 LOAD_FAST 6 (auth_format)
322 LOAD_CONST 16 (None)
324 LOAD_CONST 17 (20)
326 BUILD_SLICE 2
328 BINARY_SUBSCR
330 FORMAT_VALUE 0
332 LOAD_CONST 18 ("...")
334 BUILD_STRING 3
336 CALL 1
338 POP_TOP

340 LOAD_FAST 0 (self)
342 LOAD_ATTR 4 (session)
344 LOAD_ATTR 5 (headers)
346 LOAD_METHOD 11 (update)
348 LOAD_CONST 23 ("Authorization")
350 LOAD_FAST 6 (auth_format)
352 BUILD_MAP 1
354 CALL 1
356 POP_TOP

358 LOAD_FAST 8 (test_response)
360 STORE_FAST 4 (response)

362 POP_TOP
364 JUMP_FORWARD 47 (to 386)

366 JUMP_BACKWARD 234 (to 212)

368 LOAD_GLOBAL 0 (logger)
370 LOAD_METHOD 12 (error)
372 LOAD_CONST 24 ("All authentication formats failed")
374 CALL 1
376 POP_TOP

378 LOAD_FAST 4 (response)
380 LOAD_METHOD 13 (raise_for_status)
382 CALL 0
384 POP_TOP

386 LOAD_FAST 4 (response)
388 LOAD_METHOD 13 (raise_for_status)
390 CALL 0
392 POP_TOP

394 LOAD_FAST 4 (response)
396 LOAD_METHOD 14 (json)
398 CALL 0
400 STORE_FAST 9 (mask_data)

402 LOAD_GLOBAL 0 (logger)
404 LOAD_METHOD 1 (info)
406 LOAD_CONST 25 ("Created mask successfully: ")
408 LOAD_FAST 9 (mask_data)
410 FORMAT_VALUE 0
412 BUILD_STRING 2
414 CALL 1
416 POP_TOP

418 LOAD_FAST 9 (mask_data)
420 LOAD_METHOD 15 (get)
422 LOAD_CONST 26 ("id")
424 CALL 1

426 LOAD_FAST 9 (mask_data)
428 LOAD_METHOD 15 (get)
430 LOAD_CONST 27 ("address")
432 CALL 1

434 LOAD_FAST 9 (mask_data)
436 LOAD_METHOD 15 (get)
438 LOAD_CONST 28 ("domain")
440 CALL 1

442 LOAD_FAST 9 (mask_data)
444 LOAD_METHOD 15 (get)
446 LOAD_CONST 29 ("full_address")
448 CALL 1

450 LOAD_FAST 9 (mask_data)
452 LOAD_METHOD 15 (get)
454 LOAD_CONST 4 ("description")
456 CALL 1

458 LOAD_FAST 9 (mask_data)
460 LOAD_METHOD 15 (get)
462 LOAD_CONST 30 ("enabled")
464 LOAD_CONST 31 (True)
466 CALL 2

468 LOAD_FAST 9 (mask_data)
470 LOAD_METHOD 15 (get)
472 LOAD_CONST 32 ("created_at")
474 CALL 1

476 LOAD_CONST 33 (('id', 'address', 'domain', 'full_address', 'description', 'enabled', 'created_at'))
478 BUILD_CONST_KEY_MAP 7
480 RETURN_VALUE
482 PUSH_EXC_INFO

484 LOAD_GLOBAL 18 (requests)
486 LOAD_ATTR 16 (RequestException)
488 CHECK_EXC_MATCH
490 POP_JUMP_FORWARD_IF_FALSE 102 (to 566)
492 STORE_FAST 10 (e)

494 LOAD_GLOBAL 0 (logger)
496 LOAD_METHOD 12 (error)
498 LOAD_CONST 34 ("Error creating relay mask: ")
500 LOAD_FAST 10 (e)
502 FORMAT_VALUE 0
504 BUILD_STRING 2
506 CALL 1
508 POP_TOP

510 LOAD_GLOBAL 35 (NULL + hasattr)
512 LOAD_FAST 10 (e)
514 LOAD_CONST 35 ("response")
516 CALL 2
518 POP_JUMP_FORWARD_IF_FALSE 46 (to 546)
520 LOAD_FAST 10 (e)
522 LOAD_ATTR 18 (response)
524 POP_JUMP_FORWARD_IF_NONE 39 (to 546)

526 LOAD_GLOBAL 0 (logger)
528 LOAD_METHOD 12 (error)
530 LOAD_CONST 36 ("Response text: ")
532 LOAD_FAST 10 (e)
534 LOAD_ATTR 18 (response)
536 LOAD_ATTR 19 (text)
538 FORMAT_VALUE 0
540 BUILD_STRING 2
542 CALL 1
544 POP_TOP

546 POP_EXCEPT
548 LOAD_CONST 16 (None)
550 STORE_FAST 10 (e)
552 DELETE_FAST 10 (e)
554 LOAD_CONST 16 (None)
556 RETURN_VALUE
558 LOAD_CONST 16 (None)
560 STORE_FAST 10 (e)
562 DELETE_FAST 10 (e)
564 RERAISE 1

566 LOAD_GLOBAL 40 (Exception)
568 CHECK_EXC_MATCH
570 POP_JUMP_FORWARD_IF_FALSE 40 (to 610)
572 STORE_FAST 10 (e)

574 LOAD_GLOBAL 0 (logger)
576 LOAD_METHOD 12 (error)
578 LOAD_CONST 37 ("Unexpected error: ")
580 LOAD_FAST 10 (e)
582 FORMAT_VALUE 0
584 BUILD_STRING 2
586 CALL 1
588 POP_TOP

590 POP_EXCEPT
592 LOAD_CONST 16 (None)
594 STORE_FAST 10 (e)
596 DELETE_FAST 10 (e)
598 LOAD_CONST 16 (None)
600 RETURN_VALUE
602 LOAD_CONST 16 (None)
604 STORE_FAST 10 (e)
606 DELETE_FAST 10 (e)
608 RERAISE 1

610 RERAISE 0
612 COPY 3
614 POP_EXCEPT
616 RERAISE 1


0 LOAD_GLOBAL 0 (logger)
2 LOAD_METHOD 1 (info)
4 LOAD_CONST 1 ("Listing relay masks...")
6 CALL 1
8 POP_TOP

10 NOP

12 LOAD_FAST 0 (self)
14 LOAD_ATTR 2 (base_url)
16 FORMAT_VALUE 0
18 LOAD_CONST 2 ("/api/v1/relayaddresses/")
20 BUILD_STRING 2
22 STORE_FAST 1 (url)

24 LOAD_GLOBAL 0 (logger)
26 LOAD_METHOD 1 (info)
28 LOAD_CONST 3 ("Request URL: ")
30 LOAD_FAST 1 (url)
32 FORMAT_VALUE 0
34 BUILD_STRING 2
36 CALL 1
38 POP_TOP

40 LOAD_FAST 0 (self)
42 LOAD_ATTR 3 (session)
44 LOAD_METHOD 4 (get)
46 LOAD_FAST 1 (url)
48 LOAD_CONST 4 (10)
50 KW_NAMES 5 (('timeout',))
52 CALL 2
54 STORE_FAST 2 (response)

56 LOAD_GLOBAL 0 (logger)
58 LOAD_METHOD 1 (info)
60 LOAD_CONST 6 ("Response status: ")
62 LOAD_FAST 2 (response)
64 LOAD_ATTR 5 (status_code)
66 FORMAT_VALUE 0
68 BUILD_STRING 2
70 CALL 1
72 POP_TOP

74 LOAD_FAST 2 (response)
76 LOAD_ATTR 5 (status_code)
78 LOAD_CONST 7 (401)
80 COMPARE_OP 2 (==)
82 POP_JUMP_FORWARD_IF_FALSE 316 (to 298)

84 LOAD_CONST 8 ("Token ")
86 LOAD_FAST 0 (self)
88 LOAD_ATTR 6 (api_key)
90 FORMAT_VALUE 0
92 BUILD_STRING 2

94 LOAD_CONST 9 ("Bearer ")
96 LOAD_FAST 0 (self)
98 LOAD_ATTR 6 (api_key)
100 FORMAT_VALUE 0
102 BUILD_STRING 2

104 LOAD_CONST 10 ("API-Key ")
106 LOAD_FAST 0 (self)
108 LOAD_ATTR 6 (api_key)
110 FORMAT_VALUE 0
112 BUILD_STRING 2

114 LOAD_FAST 0 (self)
116 LOAD_ATTR 6 (api_key)

118 BUILD_LIST 4
120 STORE_FAST 3 (auth_formats)

122 LOAD_FAST 3 (auth_formats)
124 GET_ITER
126 FOR_ITER 232 (to 280)
128 STORE_FAST 4 (auth_format)

130 LOAD_GLOBAL 0 (logger)
132 LOAD_METHOD 1 (info)
134 LOAD_CONST 11 ("Trying auth format: ")
136 LOAD_FAST 4 (auth_format)
138 LOAD_CONST 12 (None)
140 LOAD_CONST 13 (20)
142 BUILD_SLICE 2
144 BINARY_SUBSCR
146 FORMAT_VALUE 0
148 LOAD_CONST 14 ("...")
150 BUILD_STRING 3
152 CALL 1
154 POP_TOP

156 LOAD_GLOBAL 15 (NULL + requests)
158 LOAD_ATTR 8 (Session)
160 CALL 0
162 STORE_FAST 5 (test_session)

164 LOAD_FAST 5 (test_session)
166 LOAD_ATTR 9 (headers)
168 LOAD_METHOD 10 (update)

170 LOAD_FAST 4 (auth_format)

172 LOAD_CONST 15 ("application/json")

174 LOAD_CONST 15 ("application/json")
176 LOAD_CONST 16 (('Authorization', 'Content-Type', 'Accept'))
178 BUILD_CONST_KEY_MAP 3
180 CALL 1
182 POP_TOP

184 LOAD_FAST 5 (test_session)
186 LOAD_METHOD 4 (get)
188 LOAD_FAST 1 (url)
190 LOAD_CONST 4 (10)
192 KW_NAMES 5 (('timeout',))
194 CALL 2
196 STORE_FAST 6 (test_response)

198 LOAD_GLOBAL 0 (logger)
200 LOAD_METHOD 1 (info)
202 LOAD_CONST 17 ("Test response status: ")
204 LOAD_FAST 6 (test_response)
206 LOAD_ATTR 5 (status_code)
208 FORMAT_VALUE 0
210 BUILD_STRING 2
212 CALL 1
214 POP_TOP

216 LOAD_FAST 6 (test_response)
218 LOAD_ATTR 5 (status_code)
220 LOAD_CONST 7 (401)
222 COMPARE_OP 3 (!=)
224 POP_JUMP_FORWARD_IF_FALSE 75 (to 278)

226 LOAD_GLOBAL 0 (logger)
228 LOAD_METHOD 1 (info)
230 LOAD_CONST 18 ("Success with auth format: ")
232 LOAD_FAST 4 (auth_format)
234 LOAD_CONST 12 (None)
236 LOAD_CONST 13 (20)
238 BUILD_SLICE 2
240 BINARY_SUBSCR
242 FORMAT_VALUE 0
244 LOAD_CONST 14 ("...")
246 BUILD_STRING 3
248 CALL 1
250 POP_TOP

252 LOAD_FAST 0 (self)
254 LOAD_ATTR 3 (session)
256 LOAD_ATTR 9 (headers)
258 LOAD_METHOD 10 (update)
260 LOAD_CONST 19 ("Authorization")
262 LOAD_FAST 4 (auth_format)
264 BUILD_MAP 1
266 CALL 1
268 POP_TOP

270 LOAD_FAST 6 (test_response)
272 STORE_FAST 2 (response)

274 POP_TOP
276 JUMP_FORWARD 47 (to 298)

278 JUMP_BACKWARD 233 (to 126)

280 LOAD_GLOBAL 0 (logger)
282 LOAD_METHOD 11 (error)
284 LOAD_CONST 20 ("All authentication formats failed for list")
286 CALL 1
288 POP_TOP

290 LOAD_FAST 2 (response)
292 LOAD_METHOD 12 (raise_for_status)
294 CALL 0
296 POP_TOP

298 LOAD_FAST 2 (response)
300 LOAD_METHOD 12 (raise_for_status)
302 CALL 0
304 POP_TOP

306 LOAD_FAST 2 (response)
308 LOAD_METHOD 13 (json)
310 CALL 0
312 STORE_FAST 7 (data)

314 LOAD_GLOBAL 0 (logger)
316 LOAD_METHOD 1 (info)
318 LOAD_CONST 21 ("API response data: ")
320 LOAD_FAST 7 (data)
322 FORMAT_VALUE 0
324 BUILD_STRING 2
326 CALL 1
328 POP_TOP

330 BUILD_LIST 0
332 STORE_FAST 8 (masks)

334 LOAD_GLOBAL 29 (NULL + isinstance)
336 LOAD_FAST 7 (data)
338 LOAD_GLOBAL 30 (dict)
340 CALL 2
342 POP_JUMP_FORWARD_IF_FALSE 22 (to 356)
344 LOAD_FAST 7 (data)
346 LOAD_METHOD 4 (get)
348 LOAD_CONST 22 ("results")
350 LOAD_FAST 7 (data)
352 CALL 2
354 JUMP_FORWARD 1 (to 358)
356 LOAD_FAST 7 (data)
358 STORE_FAST 9 (mask_list)

360 LOAD_GLOBAL 29 (NULL + isinstance)
362 LOAD_FAST 9 (mask_list)
364 LOAD_GLOBAL 32 (list)
366 CALL 2
368 POP_JUMP_FORWARD_IF_TRUE 7 (to 384)

370 LOAD_FAST 9 (mask_list)
372 POP_JUMP_FORWARD_IF_FALSE 3 (to 380)
374 LOAD_FAST 9 (mask_list)
376 BUILD_LIST 1
378 JUMP_FORWARD 1 (to 382)
380 BUILD_LIST 0
382 STORE_FAST 9 (mask_list)

384 LOAD_FAST 9 (mask_list)
386 GET_ITER
388 FOR_ITER 207 (to 484)
390 STORE_FAST 10 (mask)

392 LOAD_FAST 8 (masks)
394 LOAD_METHOD 17 (append)

396 LOAD_FAST 10 (mask)
398 LOAD_METHOD 4 (get)
400 LOAD_CONST 23 ("id")
402 CALL 1

404 LOAD_FAST 10 (mask)
406 LOAD_METHOD 4 (get)
408 LOAD_CONST 24 ("address")
410 CALL 1

412 LOAD_FAST 10 (mask)
414 LOAD_METHOD 4 (get)
416 LOAD_CONST 25 ("domain")
418 CALL 1

420 LOAD_FAST 10 (mask)
422 LOAD_METHOD 4 (get)
424 LOAD_CONST 26 ("full_address")
426 CALL 1

428 LOAD_FAST 10 (mask)
430 LOAD_METHOD 4 (get)
432 LOAD_CONST 27 ("description")
434 CALL 1

436 LOAD_FAST 10 (mask)
438 LOAD_METHOD 4 (get)
440 LOAD_CONST 28 ("enabled")
442 LOAD_CONST 29 (True)
444 CALL 2

446 LOAD_FAST 10 (mask)
448 LOAD_METHOD 4 (get)
450 LOAD_CONST 30 ("created_at")
452 CALL 1

454 LOAD_FAST 10 (mask)
456 LOAD_METHOD 4 (get)
458 LOAD_CONST 31 ("num_forwarded")
460 LOAD_CONST 32 (0)
462 CALL 2

464 LOAD_FAST 10 (mask)
466 LOAD_METHOD 4 (get)
468 LOAD_CONST 33 ("num_blocked")
470 LOAD_CONST 32 (0)
472 CALL 2

474 LOAD_CONST 34 (('id', 'address', 'domain', 'full_address', 'description', 'enabled', 'created_at', 'num_forwarded', 'num_blocked'))
476 BUILD_CONST_KEY_MAP 9
478 CALL 1
480 POP_TOP
482 JUMP_BACKWARD 208 (to 388)

484 LOAD_GLOBAL 0 (logger)
486 LOAD_METHOD 1 (info)
488 LOAD_CONST 35 ("Found ")
490 LOAD_GLOBAL 37 (NULL + len)
492 LOAD_FAST 8 (masks)
494 CALL 1
496 FORMAT_VALUE 0
498 LOAD_CONST 36 (" masks")
500 BUILD_STRING 3
502 CALL 1
504 POP_TOP

506 LOAD_FAST 8 (masks)
508 RETURN_VALUE
510 PUSH_EXC_INFO

512 LOAD_GLOBAL 14 (requests)
514 LOAD_ATTR 19 (RequestException)
516 CHECK_EXC_MATCH
518 POP_JUMP_FORWARD_IF_FALSE 103 (to 596)
520 STORE_FAST 11 (e)

522 LOAD_GLOBAL 0 (logger)
524 LOAD_METHOD 11 (error)
526 LOAD_CONST 37 ("Error listing relay masks: ")
528 LOAD_FAST 11 (e)
530 FORMAT_VALUE 0
532 BUILD_STRING 2
534 CALL 1
536 POP_TOP

538 LOAD_GLOBAL 41 (NULL + hasattr)
540 LOAD_FAST 11 (e)
542 LOAD_CONST 38 ("response")
544 CALL 2
546 POP_JUMP_FORWARD_IF_FALSE 46 (to 574)
548 LOAD_FAST 11 (e)
550 LOAD_ATTR 21 (response)
552 POP_JUMP_FORWARD_IF_NONE 39 (to 574)

554 LOAD_GLOBAL 0 (logger)
556 LOAD_METHOD 11 (error)
558 LOAD_CONST 39 ("Response text: ")
560 LOAD_FAST 11 (e)
562 LOAD_ATTR 21 (response)
564 LOAD_ATTR 22 (text)
566 FORMAT_VALUE 0
568 BUILD_STRING 2
570 CALL 1
572 POP_TOP

574 BUILD_LIST 0
576 SWAP 2
578 POP_EXCEPT
580 LOAD_CONST 12 (None)
582 STORE_FAST 11 (e)
584 DELETE_FAST 11 (e)
586 RETURN_VALUE
588 LOAD_CONST 12 (None)
590 STORE_FAST 11 (e)
592 DELETE_FAST 11 (e)
594 RERAISE 1

596 LOAD_GLOBAL 46 (Exception)
598 CHECK_EXC_MATCH
600 POP_JUMP_FORWARD_IF_FALSE 41 (to 642)
602 STORE_FAST 11 (e)

604 LOAD_GLOBAL 0 (logger)
606 LOAD_METHOD 11 (error)
608 LOAD_CONST 40 ("Unexpected error: ")
610 LOAD_FAST 11 (e)
612 FORMAT_VALUE 0
614 BUILD_STRING 2
616 CALL 1
618 POP_TOP

620 BUILD_LIST 0
622 SWAP 2
624 POP_EXCEPT
626 LOAD_CONST 12 (None)
628 STORE_FAST 11 (e)
630 DELETE_FAST 11 (e)
632 RETURN_VALUE
634 LOAD_CONST 12 (None)
636 STORE_FAST 11 (e)
638 DELETE_FAST 11 (e)
640 RERAISE 1

642 RERAISE 0
644 COPY 3
646 POP_EXCEPT
648 RERAISE 1


0 LOAD_CONST 1 (False)

2 LOAD_CONST 2 (None)

4 LOAD_CONST 2 (None)

6 LOAD_CONST 3 (0)

8 LOAD_CONST 2 (None)

10 LOAD_CONST 4 (('success', 'auth_format', 'error', 'masks_count', 'working_url'))
12 BUILD_CONST_KEY_MAP 5
14 STORE_FAST 1 (results)

16 LOAD_GLOBAL 0 (logger)
18 LOAD_METHOD 1 (info)
20 LOAD_CONST 5 ("Testing Firefox Relay API connection...")
22 CALL 1
24 POP_TOP

26 LOAD_CONST 6 (('Production', 'https://relay.firefox.com'))

28 LOAD_CONST 7 (('Development', 'https://dev.fxprivaterelay.nonprod.cloudops.mozgcp.net'))

30 BUILD_LIST 2
32 STORE_FAST 2 (base_urls)

34 BUILD_LIST 0
36 LOAD_CONST 8 (('/api/v1/relayaddresses/', '/api/v1/', '/accounts/profile/'))
38 LIST_EXTEND 1
40 STORE_FAST 3 (endpoints)

42 LOAD_FAST 2 (base_urls)
44 GET_ITER
46 FOR_ITER 685 (to 618)
48 UNPACK_SEQUENCE 2
50 STORE_FAST 4 (env_name)
52 STORE_FAST 5 (base_url)

54 LOAD_GLOBAL 0 (logger)
56 LOAD_METHOD 1 (info)
58 LOAD_CONST 9 ("Testing ")
60 LOAD_FAST 4 (env_name)
62 FORMAT_VALUE 0
64 LOAD_CONST 10 (" environment: ")
66 LOAD_FAST 5 (base_url)
68 FORMAT_VALUE 0
70 BUILD_STRING 4
72 CALL 1
74 POP_TOP

76 LOAD_FAST 3 (endpoints)
78 GET_ITER
80 FOR_ITER 643 (to 616)
82 STORE_FAST 6 (endpoint)

84 LOAD_FAST 5 (base_url)
86 FORMAT_VALUE 0
88 LOAD_FAST 6 (endpoint)
90 FORMAT_VALUE 0
92 BUILD_STRING 2
94 STORE_FAST 7 (url)

96 LOAD_GLOBAL 0 (logger)
98 LOAD_METHOD 1 (info)
100 LOAD_CONST 11 ("Testing endpoint: ")
102 LOAD_FAST 6 (endpoint)
104 FORMAT_VALUE 0
106 BUILD_STRING 2
108 CALL 1
110 POP_TOP

112 LOAD_CONST 12 ("Token")
114 LOAD_CONST 13 ("Token ")
116 LOAD_FAST 0 (self)
118 LOAD_ATTR 2 (api_key)
120 FORMAT_VALUE 0
122 BUILD_STRING 2
124 BUILD_TUPLE 2

126 LOAD_CONST 14 ("Bearer")
128 LOAD_CONST 15 ("Bearer ")
130 LOAD_FAST 0 (self)
132 LOAD_ATTR 2 (api_key)
134 FORMAT_VALUE 0
136 BUILD_STRING 2
138 BUILD_TUPLE 2

140 LOAD_CONST 16 ("API-Key")
142 LOAD_CONST 17 ("API-Key ")
144 LOAD_FAST 0 (self)
146 LOAD_ATTR 2 (api_key)
148 FORMAT_VALUE 0
150 BUILD_STRING 2
152 BUILD_TUPLE 2

154 LOAD_CONST 18 (('X-API-Key', 'X-API-Key'))

156 LOAD_CONST 19 ("Raw")
158 LOAD_FAST 0 (self)
160 LOAD_ATTR 2 (api_key)
162 BUILD_TUPLE 2

164 BUILD_LIST 5
166 STORE_FAST 8 (auth_formats)

168 LOAD_FAST 8 (auth_formats)
170 GET_ITER
172 FOR_ITER 557 (to 614)
174 UNPACK_SEQUENCE 2
176 STORE_FAST 9 (format_name)
178 STORE_FAST 10 (auth_format)

180 LOAD_GLOBAL 0 (logger)
182 LOAD_METHOD 1 (info)
184 LOAD_CONST 9 ("Testing ")
186 LOAD_FAST 9 (format_name)
188 FORMAT_VALUE 0
190 LOAD_CONST 20 (" format...")
192 BUILD_STRING 3
194 CALL 1
196 POP_TOP

198 NOP

200 LOAD_GLOBAL 7 (NULL + requests)
202 LOAD_ATTR 4 (Session)
204 CALL 0
206 STORE_FAST 11 (test_session)

208 LOAD_CONST 21 ("application/json")

210 LOAD_CONST 21 ("application/json")

212 LOAD_CONST 22 ("AutoCloudSkill/1.0")
214 LOAD_CONST 23 (('Content-Type', 'Accept', 'User-Agent'))
216 BUILD_CONST_KEY_MAP 3
218 STORE_FAST 12 (headers)

220 LOAD_FAST 9 (format_name)
222 LOAD_CONST 24 ("X-API-Key")
224 COMPARE_OP 2 (==)
226 POP_JUMP_FORWARD_IF_FALSE 11 (to 240)

228 LOAD_FAST 0 (self)
230 LOAD_ATTR 2 (api_key)
232 LOAD_FAST 12 (headers)
234 LOAD_CONST 24 ("X-API-Key")
236 STORE_SUBSCR
238 JUMP_FORWARD 5 (to 248)

240 LOAD_FAST 10 (auth_format)
242 LOAD_FAST 12 (headers)
244 LOAD_CONST 25 ("Authorization")
246 STORE_SUBSCR

248 LOAD_FAST 11 (test_session)
250 LOAD_ATTR 5 (headers)
252 LOAD_METHOD 6 (update)
254 LOAD_FAST 12 (headers)
256 CALL 1
258 POP_TOP

260 LOAD_FAST 11 (test_session)
262 LOAD_METHOD 7 (get)
264 LOAD_FAST 7 (url)
266 LOAD_CONST 26 (10)
268 KW_NAMES 27 (('timeout',))
270 CALL 2
272 STORE_FAST 13 (response)

274 LOAD_GLOBAL 0 (logger)
276 LOAD_METHOD 1 (info)
278 LOAD_CONST 28 ("Response status: ")
280 LOAD_FAST 13 (response)
282 LOAD_ATTR 8 (status_code)
284 FORMAT_VALUE 0
286 BUILD_STRING 2
288 CALL 1
290 POP_TOP

292 LOAD_FAST 13 (response)
294 LOAD_ATTR 8 (status_code)
296 LOAD_CONST 29 (200)
298 COMPARE_OP 2 (==)
300 POP_JUMP_FORWARD_IF_FALSE 318 (to 554)

302 LOAD_FAST 13 (response)
304 LOAD_METHOD 9 (json)
306 CALL 0
308 STORE_FAST 14 (data)

310 LOAD_GLOBAL 21 (NULL + isinstance)
312 LOAD_FAST 14 (data)
314 LOAD_GLOBAL 22 (dict)
316 CALL 2
318 POP_JUMP_FORWARD_IF_FALSE 22 (to 332)
320 LOAD_FAST 14 (data)
322 LOAD_METHOD 7 (get)
324 LOAD_CONST 30 ("results")
326 LOAD_FAST 14 (data)
328 CALL 2
330 JUMP_FORWARD 1 (to 334)
332 LOAD_FAST 14 (data)
334 STORE_FAST 15 (mask_list)

336 LOAD_GLOBAL 21 (NULL + isinstance)
338 LOAD_FAST 15 (mask_list)
340 LOAD_GLOBAL 24 (list)
342 CALL 2
344 POP_JUMP_FORWARD_IF_TRUE 7 (to 360)

346 LOAD_FAST 15 (mask_list)
348 POP_JUMP_FORWARD_IF_FALSE 3 (to 356)
350 LOAD_FAST 15 (mask_list)
352 BUILD_LIST 1
354 JUMP_FORWARD 1 (to 358)
356 BUILD_LIST 0
358 STORE_FAST 15 (mask_list)

360 LOAD_CONST 31 (True)
362 LOAD_FAST 1 (results)
364 LOAD_CONST 32 ("success")
366 STORE_SUBSCR

368 LOAD_FAST 9 (format_name)
370 FORMAT_VALUE 0
372 LOAD_CONST 33 (": ")
374 LOAD_FAST 9 (format_name)
376 LOAD_CONST 24 ("X-API-Key")
378 COMPARE_OP 3 (!=)
380 POP_JUMP_FORWARD_IF_FALSE 2 (to 386)
382 LOAD_FAST 10 (auth_format)
384 JUMP_FORWARD 1 (to 388)
386 LOAD_CONST 34 ("X-API-Key header")
388 FORMAT_VALUE 0
390 BUILD_STRING 3
392 LOAD_FAST 1 (results)
394 LOAD_CONST 35 ("auth_format")
396 STORE_SUBSCR

398 LOAD_GLOBAL 27 (NULL + len)
400 LOAD_FAST 15 (mask_list)
402 CALL 1
404 LOAD_FAST 1 (results)
406 LOAD_CONST 36 ("masks_count")
408 STORE_SUBSCR

410 LOAD_FAST 5 (base_url)
412 LOAD_FAST 1 (results)
414 LOAD_CONST 37 ("working_url")
416 STORE_SUBSCR

418 LOAD_FAST 5 (base_url)
420 LOAD_FAST 0 (self)
422 STORE_ATTR 14 (base_url)

424 LOAD_FAST 9 (format_name)
426 LOAD_CONST 24 ("X-API-Key")
428 COMPARE_OP 2 (==)
430 POP_JUMP_FORWARD_IF_FALSE 66 (to 476)

432 LOAD_FAST 0 (self)
434 LOAD_ATTR 15 (session)
436 LOAD_ATTR 5 (headers)
438 LOAD_METHOD 6 (update)
440 LOAD_CONST 24 ("X-API-Key")
442 LOAD_FAST 0 (self)
444 LOAD_ATTR 2 (api_key)
446 BUILD_MAP 1
448 CALL 1
450 POP_TOP

452 LOAD_CONST 25 ("Authorization")
454 LOAD_FAST 0 (self)
456 LOAD_ATTR 15 (session)
458 LOAD_ATTR 5 (headers)
460 CONTAINS_OP 0 (in)
462 POP_JUMP_FORWARD_IF_FALSE 13 (to 474)

464 LOAD_FAST 0 (self)
466 LOAD_ATTR 15 (session)
468 LOAD_ATTR 5 (headers)
470 LOAD_CONST 25 ("Authorization")
472 DELETE_SUBSCR
474 JUMP_FORWARD 60 (to 516)

476 LOAD_FAST 0 (self)
478 LOAD_ATTR 15 (session)
480 LOAD_ATTR 5 (headers)
482 LOAD_METHOD 6 (update)
484 LOAD_CONST 25 ("Authorization")
486 LOAD_FAST 10 (auth_format)
488 BUILD_MAP 1
490 CALL 1
492 POP_TOP

494 LOAD_CONST 24 ("X-API-Key")
496 LOAD_FAST 0 (self)
498 LOAD_ATTR 15 (session)
500 LOAD_ATTR 5 (headers)
502 CONTAINS_OP 0 (in)
504 POP_JUMP_FORWARD_IF_FALSE 13 (to 516)

506 LOAD_FAST 0 (self)
508 LOAD_ATTR 15 (session)
510 LOAD_ATTR 5 (headers)
512 LOAD_CONST 24 ("X-API-Key")
514 DELETE_SUBSCR

516 LOAD_GLOBAL 0 (logger)
518 LOAD_METHOD 1 (info)
520 LOAD_CONST 38 ("Connection test successful: ")
522 LOAD_FAST 4 (env_name)
524 FORMAT_VALUE 0
526 LOAD_CONST 39 (" - ")
528 LOAD_FAST 9 (format_name)
530 FORMAT_VALUE 0
532 BUILD_STRING 4
534 CALL 1
536 POP_TOP

538 LOAD_FAST 1 (results)
540 SWAP 2
542 POP_TOP
544 SWAP 2
546 POP_TOP
548 SWAP 2
550 POP_TOP
552 RETURN_VALUE

554 JUMP_BACKWARD 499 (to 172)
556 PUSH_EXC_INFO

558 LOAD_GLOBAL 6 (requests)
560 LOAD_ATTR 16 (RequestException)
562 CHECK_EXC_MATCH
564 POP_JUMP_FORWARD_IF_FALSE 42 (to 606)
566 STORE_FAST 16 (e)

568 LOAD_GLOBAL 0 (logger)
570 LOAD_METHOD 17 (warning)
572 LOAD_FAST 9 (format_name)
574 FORMAT_VALUE 0
576 LOAD_CONST 40 (" failed: ")
578 LOAD_FAST 16 (e)
580 FORMAT_VALUE 0
582 BUILD_STRING 3
584 CALL 1
586 POP_TOP

588 POP_EXCEPT
590 LOAD_CONST 2 (None)
592 STORE_FAST 16 (e)
594 DELETE_FAST 16 (e)
596 JUMP_BACKWARD 551 (to 172)
598 LOAD_CONST 2 (None)
600 STORE_FAST 16 (e)
602 DELETE_FAST 16 (e)
604 RERAISE 1

606 RERAISE 0
608 COPY 3
610 POP_EXCEPT
612 RERAISE 1

614 JUMP_BACKWARD 645 (to 80)

616 JUMP_BACKWARD 687 (to 46)

618 LOAD_CONST 41 ("All authentication formats and URLs failed")
620 LOAD_FAST 1 (results)
622 LOAD_CONST 42 ("error")
624 STORE_SUBSCR

626 LOAD_GLOBAL 0 (logger)
628 LOAD_METHOD 18 (error)
630 LOAD_CONST 41 ("All authentication formats and URLs failed")
632 CALL 1
634 POP_TOP

636 LOAD_FAST 1 (results)
638 RETURN_VALUE


0 NOP

2 LOAD_FAST 0 (self)
4 LOAD_ATTR 0 (base_url)
6 FORMAT_VALUE 0
8 LOAD_CONST 1 ("/api/v1/relayaddresses/")
10 LOAD_FAST 1 (mask_id)
12 FORMAT_VALUE 0
14 LOAD_CONST 2 ("/")
16 BUILD_STRING 4
18 STORE_FAST 2 (url)

20 LOAD_FAST 0 (self)
22 LOAD_ATTR 1 (session)
24 LOAD_METHOD 2 (delete)
26 LOAD_FAST 2 (url)
28 LOAD_CONST 3 (10)
30 KW_NAMES 4 (('timeout',))
32 CALL 2
34 STORE_FAST 3 (response)

36 LOAD_FAST 3 (response)
38 LOAD_METHOD 3 (raise_for_status)
40 CALL 0
42 POP_TOP

44 LOAD_CONST 5 (True)
46 RETURN_VALUE
48 PUSH_EXC_INFO

50 LOAD_GLOBAL 8 (requests)
52 LOAD_ATTR 5 (RequestException)
54 CHECK_EXC_MATCH
56 POP_JUMP_FORWARD_IF_FALSE 40 (to 96)
58 STORE_FAST 4 (e)

60 LOAD_GLOBAL 12 (logger)
62 LOAD_METHOD 7 (error)
64 LOAD_CONST 6 ("Error deleting relay mask: ")
66 LOAD_FAST 4 (e)
68 FORMAT_VALUE 0
70 BUILD_STRING 2
72 CALL 1
74 POP_TOP

76 POP_EXCEPT
78 LOAD_CONST 7 (None)
80 STORE_FAST 4 (e)
82 DELETE_FAST 4 (e)
84 LOAD_CONST 8 (False)
86 RETURN_VALUE
88 LOAD_CONST 7 (None)
90 STORE_FAST 4 (e)
92 DELETE_FAST 4 (e)
94 RERAISE 1

96 LOAD_GLOBAL 16 (Exception)
98 CHECK_EXC_MATCH
100 POP_JUMP_FORWARD_IF_FALSE 40 (to 140)
102 STORE_FAST 4 (e)

104 LOAD_GLOBAL 12 (logger)
106 LOAD_METHOD 7 (error)
108 LOAD_CONST 9 ("Unexpected error: ")
110 LOAD_FAST 4 (e)
112 FORMAT_VALUE 0
114 BUILD_STRING 2
116 CALL 1
118 POP_TOP

120 POP_EXCEPT
122 LOAD_CONST 7 (None)
124 STORE_FAST 4 (e)
126 DELETE_FAST 4 (e)
128 LOAD_CONST 8 (False)
130 RETURN_VALUE
132 LOAD_CONST 7 (None)
134 STORE_FAST 4 (e)
136 DELETE_FAST 4 (e)
138 RERAISE 1

140 RERAISE 0
142 COPY 3
144 POP_EXCEPT
146 RERAISE 1


0 NOP

2 LOAD_FAST 0 (self)
4 LOAD_METHOD 0 (list_relay_masks)
6 CALL 0
8 STORE_FAST 1 (masks)

10 LOAD_GLOBAL 3 (NULL + len)
12 LOAD_FAST 1 (masks)
14 CALL 1
16 STORE_FAST 2 (total)

18 LOAD_CONST 1 (0)
20 STORE_FAST 3 (deleted)

22 BUILD_LIST 0
24 STORE_FAST 4 (failed_ids)

26 LOAD_FAST 1 (masks)
28 GET_ITER
30 FOR_ITER 76 (to 86)
32 STORE_FAST 5 (m)

34 LOAD_FAST 5 (m)
36 LOAD_METHOD 2 (get)
38 LOAD_CONST 2 ("id")
40 CALL 1
42 STORE_FAST 6 (mid)

44 LOAD_FAST 6 (mid)
46 POP_JUMP_FORWARD_IF_TRUE 1 (to 50)

48 JUMP_BACKWARD 26 (to 30)

50 LOAD_FAST 0 (self)
52 LOAD_METHOD 3 (delete_relay_mask)
54 LOAD_FAST 6 (mid)
56 CALL 1
58 STORE_FAST 7 (ok)

60 LOAD_FAST 7 (ok)
62 POP_JUMP_FORWARD_IF_FALSE 6 (to 74)

64 LOAD_FAST 3 (deleted)
66 LOAD_CONST 3 (1)
68 BINARY_OP 13
70 STORE_FAST 3 (deleted)
72 JUMP_BACKWARD 55 (to 30)

74 LOAD_FAST 4 (failed_ids)
76 LOAD_METHOD 4 (append)
78 LOAD_FAST 6 (mid)
80 CALL 1
82 POP_TOP
84 JUMP_BACKWARD 77 (to 30)

86 LOAD_FAST 2 (total)
88 LOAD_FAST 3 (deleted)
90 LOAD_FAST 4 (failed_ids)
92 LOAD_CONST 4 (('requested', 'deleted', 'failed_ids'))
94 BUILD_CONST_KEY_MAP 3
96 RETURN_VALUE
98 PUSH_EXC_INFO

100 LOAD_GLOBAL 10 (Exception)
102 CHECK_EXC_MATCH
104 POP_JUMP_FORWARD_IF_FALSE 59 (to 160)
106 STORE_FAST 8 (e)

108 LOAD_GLOBAL 12 (logger)
110 LOAD_METHOD 7 (error)
112 LOAD_CONST 5 ("Error deleting all masks: ")
114 LOAD_FAST 8 (e)
116 FORMAT_VALUE 0
118 BUILD_STRING 2
120 CALL 1
122 POP_TOP

124 LOAD_CONST 1 (0)
126 LOAD_CONST 1 (0)
128 BUILD_LIST 0
130 LOAD_GLOBAL 17 (NULL + str)
132 LOAD_FAST 8 (e)
134 CALL 1
136 LOAD_CONST 6 (('requested', 'deleted', 'failed_ids', 'error'))
138 BUILD_CONST_KEY_MAP 4
140 SWAP 2
142 POP_EXCEPT
144 LOAD_CONST 7 (None)
146 STORE_FAST 8 (e)
148 DELETE_FAST 8 (e)
150 RETURN_VALUE
152 LOAD_CONST 7 (None)
154 STORE_FAST 8 (e)
156 DELETE_FAST 8 (e)
158 RERAISE 1

160 RERAISE 0
162 COPY 3
164 POP_EXCEPT
166 RERAISE 1


0 NOP

2 LOAD_FAST 0 (self)
4 LOAD_METHOD 0 (list_relay_masks)
6 CALL 0
8 STORE_FAST 2 (masks)

10 LOAD_GLOBAL 3 (NULL + len)
12 LOAD_FAST 2 (masks)
14 CALL 1
16 STORE_FAST 3 (count)

18 LOAD_FAST 3 (count)
20 LOAD_GLOBAL 5 (NULL + int)
22 LOAD_FAST 1 (limit)
24 CALL 1
26 COMPARE_OP 5 (>=)
28 POP_JUMP_FORWARD_IF_FALSE 47 (to 60)

30 LOAD_FAST 0 (self)
32 LOAD_METHOD 3 (delete_all_masks)
34 CALL 0
36 STORE_FAST 4 (res)

38 LOAD_CONST 1 ("purged")
40 LOAD_CONST 2 (True)
42 BUILD_MAP 1
44 STORE_FAST 5 (out)

46 LOAD_FAST 5 (out)
48 LOAD_METHOD 4 (update)
50 LOAD_FAST 4 (res)
52 CALL 1
54 POP_TOP

56 LOAD_FAST 5 (out)
58 RETURN_VALUE

60 LOAD_CONST 3 (False)
62 LOAD_FAST 3 (count)
64 LOAD_CONST 4 (('purged', 'count'))
66 BUILD_CONST_KEY_MAP 2
68 RETURN_VALUE
70 PUSH_EXC_INFO

72 LOAD_GLOBAL 10 (Exception)
74 CHECK_EXC_MATCH
76 POP_JUMP_FORWARD_IF_FALSE 57 (to 128)
78 STORE_FAST 6 (e)

80 LOAD_GLOBAL 12 (logger)
82 LOAD_METHOD 7 (error)
84 LOAD_CONST 5 ("auto_purge_if_limit_reached error: ")
86 LOAD_FAST 6 (e)
88 FORMAT_VALUE 0
90 BUILD_STRING 2
92 CALL 1
94 POP_TOP

96 LOAD_CONST 3 (False)
98 LOAD_GLOBAL 17 (NULL + str)
100 LOAD_FAST 6 (e)
102 CALL 1
104 LOAD_CONST 6 (('purged', 'error'))
106 BUILD_CONST_KEY_MAP 2
108 SWAP 2
110 POP_EXCEPT
112 LOAD_CONST 7 (None)
114 STORE_FAST 6 (e)
116 DELETE_FAST 6 (e)
118 RETURN_VALUE
120 LOAD_CONST 7 (None)
122 STORE_FAST 6 (e)
124 DELETE_FAST 6 (e)
126 RERAISE 1

128 RERAISE 0
130 COPY 3
132 POP_EXCEPT
134 RERAISE 1


0 NOP

2 LOAD_FAST 0 (self)
4 LOAD_ATTR 0 (base_url)
6 FORMAT_VALUE 0
8 LOAD_CONST 1 ("/api/v1/relayaddresses/")
10 LOAD_FAST 1 (mask_id)
12 FORMAT_VALUE 0
14 LOAD_CONST 2 ("/")
16 BUILD_STRING 4
18 STORE_FAST 4 (url)

20 BUILD_MAP 0
22 STORE_FAST 5 (data)

24 LOAD_FAST 2 (enabled)
26 POP_JUMP_FORWARD_IF_NONE 5 (to 36)

28 LOAD_FAST 2 (enabled)
30 LOAD_FAST 5 (data)
32 LOAD_CONST 4 ("enabled")
34 STORE_SUBSCR

36 LOAD_FAST 3 (description)
38 POP_JUMP_FORWARD_IF_NONE 5 (to 48)

40 LOAD_FAST 3 (description)
42 LOAD_FAST 5 (data)
44 LOAD_CONST 5 ("description")
46 STORE_SUBSCR

48 LOAD_FAST 5 (data)
50 POP_JUMP_FORWARD_IF_TRUE 2 (to 56)

52 LOAD_CONST 3 (None)
54 RETURN_VALUE

56 LOAD_FAST 0 (self)
58 LOAD_ATTR 1 (session)
60 LOAD_METHOD 2 (patch)
62 LOAD_FAST 4 (url)
64 LOAD_FAST 5 (data)
66 LOAD_CONST 6 (10)
68 KW_NAMES 7 (('json', 'timeout'))
70 CALL 3
72 STORE_FAST 6 (response)

74 LOAD_FAST 6 (response)
76 LOAD_METHOD 3 (raise_for_status)
78 CALL 0
80 POP_TOP

82 LOAD_FAST 6 (response)
84 LOAD_METHOD 4 (json)
86 CALL 0
88 STORE_FAST 7 (mask_data)

90 LOAD_FAST 7 (mask_data)
92 LOAD_METHOD 5 (get)
94 LOAD_CONST 8 ("id")
96 CALL 1

98 LOAD_FAST 7 (mask_data)
100 LOAD_METHOD 5 (get)
102 LOAD_CONST 9 ("address")
104 CALL 1

106 LOAD_FAST 7 (mask_data)
108 LOAD_METHOD 5 (get)
110 LOAD_CONST 10 ("domain")
112 CALL 1

114 LOAD_FAST 7 (mask_data)
116 LOAD_METHOD 5 (get)
118 LOAD_CONST 11 ("full_address")
120 CALL 1

122 LOAD_FAST 7 (mask_data)
124 LOAD_METHOD 5 (get)
126 LOAD_CONST 5 ("description")
128 CALL 1

130 LOAD_FAST 7 (mask_data)
132 LOAD_METHOD 5 (get)
134 LOAD_CONST 4 ("enabled")
136 LOAD_CONST 12 (True)
138 CALL 2

140 LOAD_FAST 7 (mask_data)
142 LOAD_METHOD 5 (get)
144 LOAD_CONST 13 ("created_at")
146 CALL 1

148 LOAD_CONST 14 (('id', 'address', 'domain', 'full_address', 'description', 'enabled', 'created_at'))
150 BUILD_CONST_KEY_MAP 7
152 RETURN_VALUE
154 PUSH_EXC_INFO

156 LOAD_GLOBAL 12 (requests)
158 LOAD_ATTR 7 (RequestException)
160 CHECK_EXC_MATCH
162 POP_JUMP_FORWARD_IF_FALSE 40 (to 202)
164 STORE_FAST 8 (e)

166 LOAD_GLOBAL 16 (logger)
168 LOAD_METHOD 9 (error)
170 LOAD_CONST 15 ("Error updating relay mask: ")
172 LOAD_FAST 8 (e)
174 FORMAT_VALUE 0
176 BUILD_STRING 2
178 CALL 1
180 POP_TOP

182 POP_EXCEPT
184 LOAD_CONST 3 (None)
186 STORE_FAST 8 (e)
188 DELETE_FAST 8 (e)
190 LOAD_CONST 3 (None)
192 RETURN_VALUE
194 LOAD_CONST 3 (None)
196 STORE_FAST 8 (e)
198 DELETE_FAST 8 (e)
200 RERAISE 1

202 LOAD_GLOBAL 20 (Exception)
204 CHECK_EXC_MATCH
206 POP_JUMP_FORWARD_IF_FALSE 40 (to 246)
208 STORE_FAST 8 (e)

210 LOAD_GLOBAL 16 (logger)
212 LOAD_METHOD 9 (error)
214 LOAD_CONST 16 ("Unexpected error: ")
216 LOAD_FAST 8 (e)
218 FORMAT_VALUE 0
220 BUILD_STRING 2
222 CALL 1
224 POP_TOP

226 POP_EXCEPT
228 LOAD_CONST 3 (None)
230 STORE_FAST 8 (e)
232 DELETE_FAST 8 (e)
234 LOAD_CONST 3 (None)
236 RETURN_VALUE
238 LOAD_CONST 3 (None)
240 STORE_FAST 8 (e)
242 DELETE_FAST 8 (e)
244 RERAISE 1

246 RERAISE 0
248 COPY 3
250 POP_EXCEPT
252 RERAISE 1


0 NOP

2 LOAD_FAST 0 (self)
4 LOAD_ATTR 0 (base_url)
6 FORMAT_VALUE 0
8 LOAD_CONST 1 ("/api/v1/relayaddresses/")
10 LOAD_FAST 1 (mask_id)
12 FORMAT_VALUE 0
14 LOAD_CONST 2 ("/")
16 BUILD_STRING 4
18 STORE_FAST 2 (url)

20 LOAD_FAST 0 (self)
22 LOAD_ATTR 1 (session)
24 LOAD_METHOD 2 (get)
26 LOAD_FAST 2 (url)
28 LOAD_CONST 3 (10)
30 KW_NAMES 4 (('timeout',))
32 CALL 2
34 STORE_FAST 3 (response)

36 LOAD_FAST 3 (response)
38 LOAD_METHOD 3 (raise_for_status)
40 CALL 0
42 POP_TOP

44 LOAD_FAST 3 (response)
46 LOAD_METHOD 4 (json)
48 CALL 0
50 STORE_FAST 4 (mask_data)

52 LOAD_FAST 4 (mask_data)
54 LOAD_METHOD 2 (get)
56 LOAD_CONST 5 ("id")
58 CALL 1

60 LOAD_FAST 4 (mask_data)
62 LOAD_METHOD 2 (get)
64 LOAD_CONST 6 ("address")
66 CALL 1

68 LOAD_FAST 4 (mask_data)
70 LOAD_METHOD 2 (get)
72 LOAD_CONST 7 ("domain")
74 CALL 1

76 LOAD_FAST 4 (mask_data)
78 LOAD_METHOD 2 (get)
80 LOAD_CONST 8 ("full_address")
82 CALL 1

84 LOAD_FAST 4 (mask_data)
86 LOAD_METHOD 2 (get)
88 LOAD_CONST 9 ("description")
90 CALL 1

92 LOAD_FAST 4 (mask_data)
94 LOAD_METHOD 2 (get)
96 LOAD_CONST 10 ("enabled")
98 LOAD_CONST 11 (True)
100 CALL 2

102 LOAD_FAST 4 (mask_data)
104 LOAD_METHOD 2 (get)
106 LOAD_CONST 12 ("created_at")
108 CALL 1

110 LOAD_FAST 4 (mask_data)
112 LOAD_METHOD 2 (get)
114 LOAD_CONST 13 ("num_forwarded")
116 LOAD_CONST 14 (0)
118 CALL 2

120 LOAD_FAST 4 (mask_data)
122 LOAD_METHOD 2 (get)
124 LOAD_CONST 15 ("num_blocked")
126 LOAD_CONST 14 (0)
128 CALL 2

130 LOAD_CONST 16 (('id', 'address', 'domain', 'full_address', 'description', 'enabled', 'created_at', 'num_forwarded', 'num_blocked'))
132 BUILD_CONST_KEY_MAP 9
134 RETURN_VALUE
136 PUSH_EXC_INFO

138 LOAD_GLOBAL 10 (requests)
140 LOAD_ATTR 6 (RequestException)
142 CHECK_EXC_MATCH
144 POP_JUMP_FORWARD_IF_FALSE 40 (to 184)
146 STORE_FAST 5 (e)

148 LOAD_GLOBAL 14 (logger)
150 LOAD_METHOD 8 (error)
152 LOAD_CONST 17 ("Error getting relay mask details: ")
154 LOAD_FAST 5 (e)
156 FORMAT_VALUE 0
158 BUILD_STRING 2
160 CALL 1
162 POP_TOP

164 POP_EXCEPT
166 LOAD_CONST 18 (None)
168 STORE_FAST 5 (e)
170 DELETE_FAST 5 (e)
172 LOAD_CONST 18 (None)
174 RETURN_VALUE
176 LOAD_CONST 18 (None)
178 STORE_FAST 5 (e)
180 DELETE_FAST 5 (e)
182 RERAISE 1

184 LOAD_GLOBAL 18 (Exception)
186 CHECK_EXC_MATCH
188 POP_JUMP_FORWARD_IF_FALSE 40 (to 228)
190 STORE_FAST 5 (e)

192 LOAD_GLOBAL 14 (logger)
194 LOAD_METHOD 8 (error)
196 LOAD_CONST 19 ("Unexpected error: ")
198 LOAD_FAST 5 (e)
200 FORMAT_VALUE 0
202 BUILD_STRING 2
204 CALL 1
206 POP_TOP

208 POP_EXCEPT
210 LOAD_CONST 18 (None)
212 STORE_FAST 5 (e)
214 DELETE_FAST 5 (e)
216 LOAD_CONST 18 (None)
218 RETURN_VALUE
220 LOAD_CONST 18 (None)
222 STORE_FAST 5 (e)
224 DELETE_FAST 5 (e)
226 RERAISE 1

228 RERAISE 0
230 COPY 3
232 POP_EXCEPT
234 RERAISE 1







0 LOAD_CONST 0 ("\nService untuk mengelola email relay menggunakan Firefox Relay API\n")
2 STORE_NAME 0 (__doc__)

4 LOAD_CONST 1 (0)
6 LOAD_CONST 2 (None)
8 IMPORT_NAME 1 (requests)
10 STORE_NAME 1 (requests)

12 LOAD_CONST 1 (0)
14 LOAD_CONST 3 (('Dict', 'Optional', 'List', 'Any'))
16 IMPORT_NAME 2 (typing)
18 IMPORT_FROM 3 (Dict)
20 STORE_NAME 3 (Dict)
22 IMPORT_FROM 4 (Optional)
24 STORE_NAME 4 (Optional)
26 IMPORT_FROM 5 (List)
28 STORE_NAME 5 (List)
30 IMPORT_FROM 6 (Any)
32 STORE_NAME 6 (Any)
34 POP_TOP

36 LOAD_CONST 1 (0)
38 LOAD_CONST 2 (None)
40 IMPORT_NAME 7 (logging)
42 STORE_NAME 7 (logging)

44 LOAD_CONST 1 (0)
46 LOAD_CONST 4 (('FIREFOX_RELAY_API_KEY', 'FIREFOX_RELAY_BASE_URL'))
48 IMPORT_NAME 8 (config.constants)
50 IMPORT_FROM 9 (FIREFOX_RELAY_API_KEY)
52 STORE_NAME 9 (FIREFOX_RELAY_API_KEY)
54 IMPORT_FROM 10 (FIREFOX_RELAY_BASE_URL)
56 STORE_NAME 10 (FIREFOX_RELAY_BASE_URL)
58 POP_TOP

60 PUSH_NULL
62 LOAD_NAME 7 (logging)
64 LOAD_ATTR 11 (getLogger)
66 LOAD_NAME 12 (__name__)
68 CALL 1
70 STORE_NAME 13 (logger)

72 PUSH_NULL
74 LOAD_BUILD_CLASS
76 LOAD_CONST 5 (code object FirefoxRelayService)
78 MAKE_FUNCTION 0 (No arguments)
80 LOAD_CONST 6 ("FirefoxRelayService")
82 CALL 2
84 STORE_NAME 14 (FirefoxRelayService)

86 LOAD_NAME 12 (__name__)
88 LOAD_CONST 7 ("__main__")
90 COMPARE_OP 2 (==)
92 POP_JUMP_FORWARD_IF_FALSE 164 (to 270)

94 NOP

96 PUSH_NULL
98 LOAD_NAME 14 (FirefoxRelayService)
100 CALL 0
102 STORE_NAME 15 (service)

104 LOAD_NAME 15 (service)
106 LOAD_METHOD 16 (create_relay_mask)
108 LOAD_CONST 8 ("Auto registration mask")
110 CALL 1
112 STORE_NAME 17 (mask)

114 LOAD_NAME 17 (mask)
116 POP_JUMP_FORWARD_IF_FALSE 73 (to 192)

118 PUSH_NULL
120 LOAD_NAME 18 (print)
122 LOAD_CONST 9 ("Created new email mask:")
124 CALL 1
126 POP_TOP

128 PUSH_NULL
130 LOAD_NAME 18 (print)
132 LOAD_CONST 10 ("Address: ")
134 LOAD_NAME 17 (mask)
136 LOAD_CONST 11 ("full_address")
138 BINARY_SUBSCR
140 FORMAT_VALUE 0
142 BUILD_STRING 2
144 CALL 1
146 POP_TOP

148 PUSH_NULL
150 LOAD_NAME 18 (print)
152 LOAD_CONST 12 ("ID: ")
154 LOAD_NAME 17 (mask)
156 LOAD_CONST 13 ("id")
158 BINARY_SUBSCR
160 FORMAT_VALUE 0
162 BUILD_STRING 2
164 CALL 1
166 POP_TOP

168 PUSH_NULL
170 LOAD_NAME 18 (print)
172 LOAD_CONST 14 ("Description: ")
174 LOAD_NAME 17 (mask)
176 LOAD_CONST 15 ("description")
178 BINARY_SUBSCR
180 FORMAT_VALUE 0
182 BUILD_STRING 2
184 CALL 1
186 POP_TOP
188 LOAD_CONST 2 (None)
190 RETURN_VALUE

192 PUSH_NULL
194 LOAD_NAME 18 (print)
196 LOAD_CONST 16 ("Failed to create email mask")
198 CALL 1
200 POP_TOP
202 LOAD_CONST 2 (None)
204 RETURN_VALUE
206 PUSH_EXC_INFO

208 LOAD_NAME 19 (Exception)
210 CHECK_EXC_MATCH
212 POP_JUMP_FORWARD_IF_FALSE 36 (to 262)
214 STORE_NAME 20 (e)

216 PUSH_NULL
218 LOAD_NAME 18 (print)
220 LOAD_CONST 17 ("Error: ")
222 LOAD_NAME 20 (e)
224 FORMAT_VALUE 0
226 BUILD_STRING 2
228 CALL 1
230 POP_TOP

232 PUSH_NULL
234 LOAD_NAME 18 (print)
236 LOAD_CONST 18 ("Pastikan API key sudah diset di file .env")
238 CALL 1
240 POP_TOP
242 POP_EXCEPT
244 LOAD_CONST 2 (None)
246 STORE_NAME 20 (e)
248 DELETE_NAME 20 (e)
250 LOAD_CONST 2 (None)
252 RETURN_VALUE
254 LOAD_CONST 2 (None)
256 STORE_NAME 20 (e)
258 DELETE_NAME 20 (e)
260 RERAISE 1

262 RERAISE 0
264 COPY 3
266 POP_EXCEPT
268 RERAISE 1

270 LOAD_CONST 2 (None)
272 RETURN_VALUE


0 LOAD_NAME 0 (__name__)
2 STORE_NAME 1 (__module__)
4 LOAD_CONST 0 ("FirefoxRelayService")
6 STORE_NAME 2 (__qualname__)

8 LOAD_CONST 1 ("Service untuk membuat dan mengelola email relay dari Firefox")
10 STORE_NAME 3 (__doc__)

12 LOAD_CONST 20 ((None, None))
14 LOAD_CONST 3 ("api_key")
16 LOAD_NAME 4 (Optional)
18 LOAD_NAME 5 (str)
20 BINARY_SUBSCR
22 LOAD_CONST 4 ("base_url")
24 LOAD_NAME 4 (Optional)
26 LOAD_NAME 5 (str)
28 BINARY_SUBSCR
30 BUILD_TUPLE 4
32 LOAD_CONST 5 (code object __init__)
34 MAKE_FUNCTION 5 (default, annotation)
36 STORE_NAME 6 (__init__)

38 LOAD_CONST 21 ((None,))
40 LOAD_CONST 6 ("description")
42 LOAD_NAME 5 (str)
44 LOAD_CONST 7 ("return")
46 LOAD_NAME 4 (Optional)
48 LOAD_NAME 7 (Dict)
50 BINARY_SUBSCR
52 BUILD_TUPLE 4
54 LOAD_CONST 8 (code object create_relay_mask)
56 MAKE_FUNCTION 5 (default, annotation)
58 STORE_NAME 8 (create_relay_mask)

60 LOAD_CONST 7 ("return")
62 LOAD_NAME 9 (List)
64 LOAD_NAME 7 (Dict)
66 BINARY_SUBSCR
68 BUILD_TUPLE 2
70 LOAD_CONST 9 (code object list_relay_masks)
72 MAKE_FUNCTION 4 (annotation)
74 STORE_NAME 10 (list_relay_masks)

76 LOAD_CONST 7 ("return")
78 LOAD_NAME 7 (Dict)
80 LOAD_NAME 5 (str)
82 LOAD_NAME 11 (any)
84 BUILD_TUPLE 2
86 BINARY_SUBSCR
88 BUILD_TUPLE 2
90 LOAD_CONST 10 (code object test_connection)
92 MAKE_FUNCTION 4 (annotation)
94 STORE_NAME 12 (test_connection)

96 LOAD_CONST 11 ("mask_id")
98 LOAD_NAME 5 (str)
100 LOAD_CONST 7 ("return")
102 LOAD_NAME 13 (bool)
104 BUILD_TUPLE 4
106 LOAD_CONST 12 (code object delete_relay_mask)
108 MAKE_FUNCTION 4 (annotation)
110 STORE_NAME 14 (delete_relay_mask)

112 LOAD_CONST 7 ("return")
114 LOAD_NAME 7 (Dict)
116 LOAD_NAME 5 (str)
118 LOAD_NAME 11 (any)
120 BUILD_TUPLE 2
122 BINARY_SUBSCR
124 BUILD_TUPLE 2
126 LOAD_CONST 13 (code object delete_all_masks)
128 MAKE_FUNCTION 4 (annotation)
130 STORE_NAME 15 (delete_all_masks)

132 LOAD_CONST 22 ((5,))
134 LOAD_CONST 15 ("limit")
136 LOAD_NAME 16 (int)
138 LOAD_CONST 7 ("return")
140 LOAD_NAME 7 (Dict)
142 LOAD_NAME 5 (str)
144 LOAD_NAME 17 (Any)
146 BUILD_TUPLE 2
148 BINARY_SUBSCR
150 BUILD_TUPLE 4
152 LOAD_CONST 16 (code object auto_purge_if_limit_reached)
154 MAKE_FUNCTION 5 (default, annotation)
156 STORE_NAME 18 (auto_purge_if_limit_reached)

158 NOP

160 NOP

162 LOAD_CONST 20 ((None, None))
164 LOAD_CONST 11 ("mask_id")
166 LOAD_NAME 5 (str)
168 LOAD_CONST 17 ("enabled")
170 LOAD_NAME 13 (bool)
172 LOAD_CONST 6 ("description")
174 LOAD_NAME 5 (str)
176 LOAD_CONST 7 ("return")
178 LOAD_NAME 4 (Optional)
180 LOAD_NAME 7 (Dict)
182 BINARY_SUBSCR
184 BUILD_TUPLE 8
186 LOAD_CONST 18 (code object update_relay_mask)
188 MAKE_FUNCTION 5 (default, annotation)
190 STORE_NAME 19 (update_relay_mask)

192 LOAD_CONST 11 ("mask_id")
194 LOAD_NAME 5 (str)
196 LOAD_CONST 7 ("return")
198 LOAD_NAME 4 (Optional)
200 LOAD_NAME 7 (Dict)
202 BINARY_SUBSCR
204 BUILD_TUPLE 4
206 LOAD_CONST 19 (code object get_relay_mask_details)
208 MAKE_FUNCTION 4 (annotation)
210 STORE_NAME 20 (get_relay_mask_details)
212 LOAD_CONST 2 (None)
214 RETURN_VALUE


0 LOAD_FAST 1 (api_key)
2 JUMP_IF_TRUE_OR_POP 6 (to 6)
4 LOAD_GLOBAL 0 (FIREFOX_RELAY_API_KEY)
6 LOAD_FAST 0 (self)
8 STORE_ATTR 1 (api_key)

10 LOAD_FAST 2 (base_url)
12 JUMP_IF_TRUE_OR_POP 6 (to 16)
14 LOAD_GLOBAL 4 (FIREFOX_RELAY_BASE_URL)
16 LOAD_FAST 0 (self)
18 STORE_ATTR 3 (base_url)

20 LOAD_FAST 0 (self)
22 LOAD_ATTR 1 (api_key)
24 POP_JUMP_FORWARD_IF_TRUE 15 (to 34)

26 LOAD_GLOBAL 9 (NULL + ValueError)
28 LOAD_CONST 1 ("Firefox Relay API key diperlukan")
30 CALL 1
32 RAISE_VARARGS 1 (exception instance)

34 LOAD_GLOBAL 11 (NULL + requests)
36 LOAD_ATTR 6 (Session)
38 CALL 0
40 LOAD_FAST 0 (self)
42 STORE_ATTR 7 (session)

44 LOAD_FAST 0 (self)
46 LOAD_ATTR 7 (session)
48 LOAD_ATTR 8 (headers)
50 LOAD_METHOD 9 (update)
52 LOAD_CONST 2 ("Bearer ")
54 LOAD_FAST 0 (self)
56 LOAD_ATTR 1 (api_key)
58 FORMAT_VALUE 0
60 BUILD_STRING 2
62 LOAD_CONST 3 ("application/json")
64 LOAD_CONST 3 ("application/json")
66 LOAD_CONST 4 (('Authorization', 'Content-Type', 'Accept'))
68 BUILD_CONST_KEY_MAP 3
70 CALL 1
72 POP_TOP
74 LOAD_CONST 5 (None)
76 RETURN_VALUE


0 LOAD_GLOBAL 0 (logger)
2 LOAD_METHOD 1 (info)
4 LOAD_CONST 1 ("Creating relay mask with description: ")
6 LOAD_FAST 1 (description)
8 FORMAT_VALUE 0
10 BUILD_STRING 2
12 CALL 1
14 POP_TOP

16 NOP

18 LOAD_FAST 0 (self)
20 LOAD_ATTR 2 (base_url)
22 FORMAT_VALUE 0
24 LOAD_CONST 2 ("/api/v1/relayaddresses/")
26 BUILD_STRING 2
28 STORE_FAST 2 (url)

30 LOAD_GLOBAL 0 (logger)
32 LOAD_METHOD 1 (info)
34 LOAD_CONST 3 ("Request URL: ")
36 LOAD_FAST 2 (url)
38 FORMAT_VALUE 0
40 BUILD_STRING 2
42 CALL 1
44 POP_TOP

46 BUILD_MAP 0
48 STORE_FAST 3 (data)

50 LOAD_FAST 1 (description)
52 POP_JUMP_FORWARD_IF_FALSE 5 (to 62)

54 LOAD_FAST 1 (description)
56 LOAD_FAST 3 (data)
58 LOAD_CONST 4 ("description")
60 STORE_SUBSCR

62 LOAD_GLOBAL 0 (logger)
64 LOAD_METHOD 1 (info)
66 LOAD_CONST 5 ("Request data: ")
68 LOAD_FAST 3 (data)
70 FORMAT_VALUE 0
72 BUILD_STRING 2
74 CALL 1
76 POP_TOP

78 LOAD_GLOBAL 0 (logger)
80 LOAD_METHOD 1 (info)
82 LOAD_CONST 6 ("Request headers: ")
84 LOAD_GLOBAL 7 (NULL + dict)
86 LOAD_FAST 0 (self)
88 LOAD_ATTR 4 (session)
90 LOAD_ATTR 5 (headers)
92 CALL 1
94 FORMAT_VALUE 0
96 BUILD_STRING 2
98 CALL 1
100 POP_TOP

102 LOAD_FAST 0 (self)
104 LOAD_ATTR 4 (session)
106 LOAD_METHOD 6 (post)
108 LOAD_FAST 2 (url)
110 LOAD_FAST 3 (data)
112 LOAD_CONST 7 (10)
114 KW_NAMES 8 (('json', 'timeout'))
116 CALL 3
118 STORE_FAST 4 (response)

120 LOAD_GLOBAL 0 (logger)
122 LOAD_METHOD 1 (info)
124 LOAD_CONST 9 ("Response status: ")
126 LOAD_FAST 4 (response)
128 LOAD_ATTR 7 (status_code)
130 FORMAT_VALUE 0
132 BUILD_STRING 2
134 CALL 1
136 POP_TOP

138 LOAD_GLOBAL 0 (logger)
140 LOAD_METHOD 1 (info)
142 LOAD_CONST 10 ("Response headers: ")
144 LOAD_GLOBAL 7 (NULL + dict)
146 LOAD_FAST 4 (response)
148 LOAD_ATTR 5 (headers)
150 CALL 1
152 FORMAT_VALUE 0
154 BUILD_STRING 2
156 CALL 1
158 POP_TOP

160 LOAD_FAST 4 (response)
162 LOAD_ATTR 7 (status_code)
164 LOAD_CONST 11 (401)
166 COMPARE_OP 2 (==)
168 POP_JUMP_FORWARD_IF_FALSE 317 (to 386)

170 LOAD_CONST 12 ("Token ")
172 LOAD_FAST 0 (self)
174 LOAD_ATTR 8 (api_key)
176 FORMAT_VALUE 0
178 BUILD_STRING 2
180 LOAD_CONST 13 ("Bearer ")
182 LOAD_FAST 0 (self)
184 LOAD_ATTR 8 (api_key)
186 FORMAT_VALUE 0
188 BUILD_STRING 2
190 LOAD_CONST 14 ("API-Key ")
192 LOAD_FAST 0 (self)
194 LOAD_ATTR 8 (api_key)
196 FORMAT_VALUE 0
198 BUILD_STRING 2
200 LOAD_FAST 0 (self)
202 LOAD_ATTR 8 (api_key)
204 BUILD_LIST 4
206 STORE_FAST 5 (auth_formats)

208 LOAD_FAST 5 (auth_formats)
210 GET_ITER
212 FOR_ITER 233 (to 368)
214 STORE_FAST 6 (auth_format)

216 LOAD_GLOBAL 0 (logger)
218 LOAD_METHOD 1 (info)
220 LOAD_CONST 15 ("Trying auth format: ")
222 LOAD_FAST 6 (auth_format)
224 LOAD_CONST 16 (None)
226 LOAD_CONST 17 (20)
228 BUILD_SLICE 2
230 BINARY_SUBSCR
232 FORMAT_VALUE 0
234 LOAD_CONST 18 ("...")
236 BUILD_STRING 3
238 CALL 1
240 POP_TOP

242 LOAD_GLOBAL 19 (NULL + requests)
244 LOAD_ATTR 10 (Session)
246 CALL 0
248 STORE_FAST 7 (test_session)

250 LOAD_FAST 7 (test_session)
252 LOAD_ATTR 5 (headers)
254 LOAD_METHOD 11 (update)
256 LOAD_FAST 6 (auth_format)
258 LOAD_CONST 19 ("application/json")
260 LOAD_CONST 19 ("application/json")
262 LOAD_CONST 20 (('Authorization', 'Content-Type', 'Accept'))
264 BUILD_CONST_KEY_MAP 3
266 CALL 1
268 POP_TOP

270 LOAD_FAST 7 (test_session)
272 LOAD_METHOD 6 (post)
274 LOAD_FAST 2 (url)
276 LOAD_FAST 3 (data)
278 LOAD_CONST 7 (10)
280 KW_NAMES 8 (('json', 'timeout'))
282 CALL 3
284 STORE_FAST 8 (test_response)

286 LOAD_GLOBAL 0 (logger)
288 LOAD_METHOD 1 (info)
290 LOAD_CONST 21 ("Test response status: ")
292 LOAD_FAST 8 (test_response)
294 LOAD_ATTR 7 (status_code)
296 FORMAT_VALUE 0
298 BUILD_STRING 2
300 CALL 1
302 POP_TOP

304 LOAD_FAST 8 (test_response)
306 LOAD_ATTR 7 (status_code)
308 LOAD_CONST 11 (401)
310 COMPARE_OP 3 (!=)
312 POP_JUMP_FORWARD_IF_FALSE 75 (to 366)

314 LOAD_GLOBAL 0 (logger)
316 LOAD_METHOD 1 (info)
318 LOAD_CONST 22 ("Success with auth format: ")
320 LOAD_FAST 6 (auth_format)
322 LOAD_CONST 16 (None)
324 LOAD_CONST 17 (20)
326 BUILD_SLICE 2
328 BINARY_SUBSCR
330 FORMAT_VALUE 0
332 LOAD_CONST 18 ("...")
334 BUILD_STRING 3
336 CALL 1
338 POP_TOP

340 LOAD_FAST 0 (self)
342 LOAD_ATTR 4 (session)
344 LOAD_ATTR 5 (headers)
346 LOAD_METHOD 11 (update)
348 LOAD_CONST 23 ("Authorization")
350 LOAD_FAST 6 (auth_format)
352 BUILD_MAP 1
354 CALL 1
356 POP_TOP

358 LOAD_FAST 8 (test_response)
360 STORE_FAST 4 (response)

362 POP_TOP
364 JUMP_FORWARD 47 (to 386)

366 JUMP_BACKWARD 234 (to 212)

368 LOAD_GLOBAL 0 (logger)
370 LOAD_METHOD 12 (error)
372 LOAD_CONST 24 ("All authentication formats failed")
374 CALL 1
376 POP_TOP

378 LOAD_FAST 4 (response)
380 LOAD_METHOD 13 (raise_for_status)
382 CALL 0
384 POP_TOP

386 LOAD_FAST 4 (response)
388 LOAD_METHOD 13 (raise_for_status)
390 CALL 0
392 POP_TOP

394 LOAD_FAST 4 (response)
396 LOAD_METHOD 14 (json)
398 CALL 0
400 STORE_FAST 9 (mask_data)

402 LOAD_GLOBAL 0 (logger)
404 LOAD_METHOD 1 (info)
406 LOAD_CONST 25 ("Created mask successfully: ")
408 LOAD_FAST 9 (mask_data)
410 FORMAT_VALUE 0
412 BUILD_STRING 2
414 CALL 1
416 POP_TOP

418 LOAD_FAST 9 (mask_data)
420 LOAD_METHOD 15 (get)
422 LOAD_CONST 26 ("id")
424 CALL 1
426 LOAD_FAST 9 (mask_data)
428 LOAD_METHOD 15 (get)
430 LOAD_CONST 27 ("address")
432 CALL 1
434 LOAD_FAST 9 (mask_data)
436 LOAD_METHOD 15 (get)
438 LOAD_CONST 28 ("domain")
440 CALL 1
442 LOAD_FAST 9 (mask_data)
444 LOAD_METHOD 15 (get)
446 LOAD_CONST 29 ("full_address")
448 CALL 1
450 LOAD_FAST 9 (mask_data)
452 LOAD_METHOD 15 (get)
454 LOAD_CONST 4 ("description")
456 CALL 1
458 LOAD_FAST 9 (mask_data)
460 LOAD_METHOD 15 (get)
462 LOAD_CONST 30 ("enabled")
464 LOAD_CONST 31 (True)
466 CALL 2
468 LOAD_FAST 9 (mask_data)
470 LOAD_METHOD 15 (get)
472 LOAD_CONST 32 ("created_at")
474 CALL 1
476 LOAD_CONST 33 (('id', 'address', 'domain', 'full_address', 'description', 'enabled', 'created_at'))
478 BUILD_CONST_KEY_MAP 7
480 RETURN_VALUE
482 PUSH_EXC_INFO

484 LOAD_GLOBAL 18 (requests)
486 LOAD_ATTR 16 (RequestException)
488 CHECK_EXC_MATCH
490 POP_JUMP_FORWARD_IF_FALSE 102 (to 566)
492 STORE_FAST 10 (e)

494 LOAD_GLOBAL 0 (logger)
496 LOAD_METHOD 12 (error)
498 LOAD_CONST 34 ("Error creating relay mask: ")
500 LOAD_FAST 10 (e)
502 FORMAT_VALUE 0
504 BUILD_STRING 2
506 CALL 1
508 POP_TOP

510 LOAD_GLOBAL 35 (NULL + hasattr)
512 LOAD_FAST 10 (e)
514 LOAD_CONST 35 ("response")
516 CALL 2
518 POP_JUMP_FORWARD_IF_FALSE 46 (to 546)
520 LOAD_FAST 10 (e)
522 LOAD_ATTR 18 (response)
524 POP_JUMP_FORWARD_IF_NONE 39 (to 546)

526 LOAD_GLOBAL 0 (logger)
528 LOAD_METHOD 12 (error)
530 LOAD_CONST 36 ("Response text: ")
532 LOAD_FAST 10 (e)
534 LOAD_ATTR 18 (response)
536 LOAD_ATTR 19 (text)
538 FORMAT_VALUE 0
540 BUILD_STRING 2
542 CALL 1
544 POP_TOP

546 POP_EXCEPT
548 LOAD_CONST 16 (None)
550 STORE_FAST 10 (e)
552 DELETE_FAST 10 (e)
554 LOAD_CONST 16 (None)
556 RETURN_VALUE
558 LOAD_CONST 16 (None)
560 STORE_FAST 10 (e)
562 DELETE_FAST 10 (e)
564 RERAISE 1

566 LOAD_GLOBAL 40 (Exception)
568 CHECK_EXC_MATCH
570 POP_JUMP_FORWARD_IF_FALSE 40 (to 610)
572 STORE_FAST 10 (e)

574 LOAD_GLOBAL 0 (logger)
576 LOAD_METHOD 12 (error)
578 LOAD_CONST 37 ("Unexpected error: ")
580 LOAD_FAST 10 (e)
582 FORMAT_VALUE 0
584 BUILD_STRING 2
586 CALL 1
588 POP_TOP

590 POP_EXCEPT
592 LOAD_CONST 16 (None)
594 STORE_FAST 10 (e)
596 DELETE_FAST 10 (e)
598 LOAD_CONST 16 (None)
600 RETURN_VALUE
602 LOAD_CONST 16 (None)
604 STORE_FAST 10 (e)
606 DELETE_FAST 10 (e)
608 RERAISE 1

610 RERAISE 0
612 COPY 3
614 POP_EXCEPT
616 RERAISE 1


0 LOAD_GLOBAL 0 (logger)
2 LOAD_METHOD 1 (info)
4 LOAD_CONST 1 ("Listing relay masks...")
6 CALL 1
8 POP_TOP

10 NOP

12 LOAD_FAST 0 (self)
14 LOAD_ATTR 2 (base_url)
16 FORMAT_VALUE 0
18 LOAD_CONST 2 ("/api/v1/relayaddresses/")
20 BUILD_STRING 2
22 STORE_FAST 1 (url)

24 LOAD_GLOBAL 0 (logger)
26 LOAD_METHOD 1 (info)
28 LOAD_CONST 3 ("Request URL: ")
30 LOAD_FAST 1 (url)
32 FORMAT_VALUE 0
34 BUILD_STRING 2
36 CALL 1
38 POP_TOP

40 LOAD_FAST 0 (self)
42 LOAD_ATTR 3 (session)
44 LOAD_METHOD 4 (get)
46 LOAD_FAST 1 (url)
48 LOAD_CONST 4 (10)
50 KW_NAMES 5 (('timeout',))
52 CALL 2
54 STORE_FAST 2 (response)

56 LOAD_GLOBAL 0 (logger)
58 LOAD_METHOD 1 (info)
60 LOAD_CONST 6 ("Response status: ")
62 LOAD_FAST 2 (response)
64 LOAD_ATTR 5 (status_code)
66 FORMAT_VALUE 0
68 BUILD_STRING 2
70 CALL 1
72 POP_TOP

74 LOAD_FAST 2 (response)
76 LOAD_ATTR 5 (status_code)
78 LOAD_CONST 7 (401)
80 COMPARE_OP 2 (==)
82 POP_JUMP_FORWARD_IF_FALSE 316 (to 298)

84 LOAD_CONST 8 ("Token ")
86 LOAD_FAST 0 (self)
88 LOAD_ATTR 6 (api_key)
90 FORMAT_VALUE 0
92 BUILD_STRING 2
94 LOAD_CONST 9 ("Bearer ")
96 LOAD_FAST 0 (self)
98 LOAD_ATTR 6 (api_key)
100 FORMAT_VALUE 0
102 BUILD_STRING 2
104 LOAD_CONST 10 ("API-Key ")
106 LOAD_FAST 0 (self)
108 LOAD_ATTR 6 (api_key)
110 FORMAT_VALUE 0
112 BUILD_STRING 2
114 LOAD_FAST 0 (self)
116 LOAD_ATTR 6 (api_key)
118 BUILD_LIST 4
120 STORE_FAST 3 (auth_formats)

122 LOAD_FAST 3 (auth_formats)
124 GET_ITER
126 FOR_ITER 232 (to 280)
128 STORE_FAST 4 (auth_format)

130 LOAD_GLOBAL 0 (logger)
132 LOAD_METHOD 1 (info)
134 LOAD_CONST 11 ("Trying auth format: ")
136 LOAD_FAST 4 (auth_format)
138 LOAD_CONST 12 (None)
140 LOAD_CONST 13 (20)
142 BUILD_SLICE 2
144 BINARY_SUBSCR
146 FORMAT_VALUE 0
148 LOAD_CONST 14 ("...")
150 BUILD_STRING 3
152 CALL 1
154 POP_TOP

156 LOAD_GLOBAL 15 (NULL + requests)
158 LOAD_ATTR 8 (Session)
160 CALL 0
162 STORE_FAST 5 (test_session)

164 LOAD_FAST 5 (test_session)
166 LOAD_ATTR 9 (headers)
168 LOAD_METHOD 10 (update)
170 LOAD_FAST 4 (auth_format)
172 LOAD_CONST 15 ("application/json")
174 LOAD_CONST 15 ("application/json")
176 LOAD_CONST 16 (('Authorization', 'Content-Type', 'Accept'))
178 BUILD_CONST_KEY_MAP 3
180 CALL 1
182 POP_TOP

184 LOAD_FAST 5 (test_session)
186 LOAD_METHOD 4 (get)
188 LOAD_FAST 1 (url)
190 LOAD_CONST 4 (10)
192 KW_NAMES 5 (('timeout',))
194 CALL 2
196 STORE_FAST 6 (test_response)

198 LOAD_GLOBAL 0 (logger)
200 LOAD_METHOD 1 (info)
202 LOAD_CONST 17 ("Test response status: ")
204 LOAD_FAST 6 (test_response)
206 LOAD_ATTR 5 (status_code)
208 FORMAT_VALUE 0
210 BUILD_STRING 2
212 CALL 1
214 POP_TOP

216 LOAD_FAST 6 (test_response)
218 LOAD_ATTR 5 (status_code)
220 LOAD_CONST 7 (401)
222 COMPARE_OP 3 (!=)
224 POP_JUMP_FORWARD_IF_FALSE 75 (to 278)

226 LOAD_GLOBAL 0 (logger)
228 LOAD_METHOD 1 (info)
230 LOAD_CONST 18 ("Success with auth format: ")
232 LOAD_FAST 4 (auth_format)
234 LOAD_CONST 12 (None)
236 LOAD_CONST 13 (20)
238 BUILD_SLICE 2
240 BINARY_SUBSCR
242 FORMAT_VALUE 0
244 LOAD_CONST 14 ("...")
246 BUILD_STRING 3
248 CALL 1
250 POP_TOP

252 LOAD_FAST 0 (self)
254 LOAD_ATTR 3 (session)
256 LOAD_ATTR 9 (headers)
258 LOAD_METHOD 10 (update)
260 LOAD_CONST 19 ("Authorization")
262 LOAD_FAST 4 (auth_format)
264 BUILD_MAP 1
266 CALL 1
268 POP_TOP

270 LOAD_FAST 6 (test_response)
272 STORE_FAST 2 (response)

274 POP_TOP
276 JUMP_FORWARD 47 (to 298)

278 JUMP_BACKWARD 233 (to 126)

280 LOAD_GLOBAL 0 (logger)
282 LOAD_METHOD 11 (error)
284 LOAD_CONST 20 ("All authentication formats failed for list")
286 CALL 1
288 POP_TOP

290 LOAD_FAST 2 (response)
292 LOAD_METHOD 12 (raise_for_status)
294 CALL 0
296 POP_TOP

298 LOAD_FAST 2 (response)
300 LOAD_METHOD 12 (raise_for_status)
302 CALL 0
304 POP_TOP

306 LOAD_FAST 2 (response)
308 LOAD_METHOD 13 (json)
310 CALL 0
312 STORE_FAST 7 (data)

314 LOAD_GLOBAL 0 (logger)
316 LOAD_METHOD 1 (info)
318 LOAD_CONST 21 ("API response data: ")
320 LOAD_FAST 7 (data)
322 FORMAT_VALUE 0
324 BUILD_STRING 2
326 CALL 1
328 POP_TOP

330 BUILD_LIST 0
332 STORE_FAST 8 (masks)

334 LOAD_GLOBAL 29 (NULL + isinstance)
336 LOAD_FAST 7 (data)
338 LOAD_GLOBAL 30 (dict)
340 CALL 2
342 POP_JUMP_FORWARD_IF_FALSE 22 (to 356)
344 LOAD_FAST 7 (data)
346 LOAD_METHOD 4 (get)
348 LOAD_CONST 22 ("results")
350 LOAD_FAST 7 (data)
352 CALL 2
354 JUMP_FORWARD 1 (to 358)
356 LOAD_FAST 7 (data)
358 STORE_FAST 9 (mask_list)

360 LOAD_GLOBAL 29 (NULL + isinstance)
362 LOAD_FAST 9 (mask_list)
364 LOAD_GLOBAL 32 (list)
366 CALL 2
368 POP_JUMP_FORWARD_IF_TRUE 7 (to 384)

370 LOAD_FAST 9 (mask_list)
372 POP_JUMP_FORWARD_IF_FALSE 3 (to 380)
374 LOAD_FAST 9 (mask_list)
376 BUILD_LIST 1
378 JUMP_FORWARD 1 (to 382)
380 BUILD_LIST 0
382 STORE_FAST 9 (mask_list)

384 LOAD_FAST 9 (mask_list)
386 GET_ITER
388 FOR_ITER 207 (to 484)
390 STORE_FAST 10 (mask)

392 LOAD_FAST 8 (masks)
394 LOAD_METHOD 17 (append)
396 LOAD_FAST 10 (mask)
398 LOAD_METHOD 4 (get)
400 LOAD_CONST 23 ("id")
402 CALL 1
404 LOAD_FAST 10 (mask)
406 LOAD_METHOD 4 (get)
408 LOAD_CONST 24 ("address")
410 CALL 1
412 LOAD_FAST 10 (mask)
414 LOAD_METHOD 4 (get)
416 LOAD_CONST 25 ("domain")
418 CALL 1
420 LOAD_FAST 10 (mask)
422 LOAD_METHOD 4 (get)
424 LOAD_CONST 26 ("full_address")
426 CALL 1
428 LOAD_FAST 10 (mask)
430 LOAD_METHOD 4 (get)
432 LOAD_CONST 27 ("description")
434 CALL 1
436 LOAD_FAST 10 (mask)
438 LOAD_METHOD 4 (get)
440 LOAD_CONST 28 ("enabled")
442 LOAD_CONST 29 (True)
444 CALL 2
446 LOAD_FAST 10 (mask)
448 LOAD_METHOD 4 (get)
450 LOAD_CONST 30 ("created_at")
452 CALL 1
454 LOAD_FAST 10 (mask)
456 LOAD_METHOD 4 (get)
458 LOAD_CONST 31 ("num_forwarded")
460 LOAD_CONST 32 (0)
462 CALL 2
464 LOAD_FAST 10 (mask)
466 LOAD_METHOD 4 (get)
468 LOAD_CONST 33 ("num_blocked")
470 LOAD_CONST 32 (0)
472 CALL 2
474 LOAD_CONST 34 (('id', 'address', 'domain', 'full_address', 'description', 'enabled', 'created_at', 'num_forwarded', 'num_blocked'))
476 BUILD_CONST_KEY_MAP 9
478 CALL 1
480 POP_TOP
482 JUMP_BACKWARD 208 (to 388)

484 LOAD_GLOBAL 0 (logger)
486 LOAD_METHOD 1 (info)
488 LOAD_CONST 35 ("Found ")
490 LOAD_GLOBAL 37 (NULL + len)
492 LOAD_FAST 8 (masks)
494 CALL 1
496 FORMAT_VALUE 0
498 LOAD_CONST 36 (" masks")
500 BUILD_STRING 3
502 CALL 1
504 POP_TOP

506 LOAD_FAST 8 (masks)
508 RETURN_VALUE
510 PUSH_EXC_INFO

512 LOAD_GLOBAL 14 (requests)
514 LOAD_ATTR 19 (RequestException)
516 CHECK_EXC_MATCH
518 POP_JUMP_FORWARD_IF_FALSE 103 (to 596)
520 STORE_FAST 11 (e)

522 LOAD_GLOBAL 0 (logger)
524 LOAD_METHOD 11 (error)
526 LOAD_CONST 37 ("Error listing relay masks: ")
528 LOAD_FAST 11 (e)
530 FORMAT_VALUE 0
532 BUILD_STRING 2
534 CALL 1
536 POP_TOP

538 LOAD_GLOBAL 41 (NULL + hasattr)
540 LOAD_FAST 11 (e)
542 LOAD_CONST 38 ("response")
544 CALL 2
546 POP_JUMP_FORWARD_IF_FALSE 46 (to 574)
548 LOAD_FAST 11 (e)
550 LOAD_ATTR 21 (response)
552 POP_JUMP_FORWARD_IF_NONE 39 (to 574)

554 LOAD_GLOBAL 0 (logger)
556 LOAD_METHOD 11 (error)
558 LOAD_CONST 39 ("Response text: ")
560 LOAD_FAST 11 (e)
562 LOAD_ATTR 21 (response)
564 LOAD_ATTR 22 (text)
566 FORMAT_VALUE 0
568 BUILD_STRING 2
570 CALL 1
572 POP_TOP

574 BUILD_LIST 0
576 SWAP 2
578 POP_EXCEPT
580 LOAD_CONST 12 (None)
582 STORE_FAST 11 (e)
584 DELETE_FAST 11 (e)
586 RETURN_VALUE
588 LOAD_CONST 12 (None)
590 STORE_FAST 11 (e)
592 DELETE_FAST 11 (e)
594 RERAISE 1

596 LOAD_GLOBAL 46 (Exception)
598 CHECK_EXC_MATCH
600 POP_JUMP_FORWARD_IF_FALSE 41 (to 642)
602 STORE_FAST 11 (e)

604 LOAD_GLOBAL 0 (logger)
606 LOAD_METHOD 11 (error)
608 LOAD_CONST 40 ("Unexpected error: ")
610 LOAD_FAST 11 (e)
612 FORMAT_VALUE 0
614 BUILD_STRING 2
616 CALL 1
618 POP_TOP

620 BUILD_LIST 0
622 SWAP 2
624 POP_EXCEPT
626 LOAD_CONST 12 (None)
628 STORE_FAST 11 (e)
630 DELETE_FAST 11 (e)
632 RETURN_VALUE
634 LOAD_CONST 12 (None)
636 STORE_FAST 11 (e)
638 DELETE_FAST 11 (e)
640 RERAISE 1

642 RERAISE 0
644 COPY 3
646 POP_EXCEPT
648 RERAISE 1


0 LOAD_CONST 1 (False)
2 LOAD_CONST 2 (None)
4 LOAD_CONST 2 (None)
6 LOAD_CONST 3 (0)
8 LOAD_CONST 2 (None)
10 LOAD_CONST 4 (('success', 'auth_format', 'error', 'masks_count', 'working_url'))
12 BUILD_CONST_KEY_MAP 5
14 STORE_FAST 1 (results)

16 LOAD_GLOBAL 0 (logger)
18 LOAD_METHOD 1 (info)
20 LOAD_CONST 5 ("Testing Firefox Relay API connection...")
22 CALL 1
24 POP_TOP

26 LOAD_CONST 6 (('Production', 'https://relay.firefox.com'))
28 LOAD_CONST 7 (('Development', 'https://dev.fxprivaterelay.nonprod.cloudops.mozgcp.net'))
30 BUILD_LIST 2
32 STORE_FAST 2 (base_urls)

34 BUILD_LIST 0
36 LOAD_CONST 8 (('/api/v1/relayaddresses/', '/api/v1/', '/accounts/profile/'))
38 LIST_EXTEND 1
40 STORE_FAST 3 (endpoints)

42 LOAD_FAST 2 (base_urls)
44 GET_ITER
46 FOR_ITER 685 (to 618)
48 UNPACK_SEQUENCE 2
50 STORE_FAST 4 (env_name)
52 STORE_FAST 5 (base_url)

54 LOAD_GLOBAL 0 (logger)
56 LOAD_METHOD 1 (info)
58 LOAD_CONST 9 ("Testing ")
60 LOAD_FAST 4 (env_name)
62 FORMAT_VALUE 0
64 LOAD_CONST 10 (" environment: ")
66 LOAD_FAST 5 (base_url)
68 FORMAT_VALUE 0
70 BUILD_STRING 4
72 CALL 1
74 POP_TOP

76 LOAD_FAST 3 (endpoints)
78 GET_ITER
80 FOR_ITER 643 (to 616)
82 STORE_FAST 6 (endpoint)

84 LOAD_FAST 5 (base_url)
86 FORMAT_VALUE 0
88 LOAD_FAST 6 (endpoint)
90 FORMAT_VALUE 0
92 BUILD_STRING 2
94 STORE_FAST 7 (url)

96 LOAD_GLOBAL 0 (logger)
98 LOAD_METHOD 1 (info)
100 LOAD_CONST 11 ("Testing endpoint: ")
102 LOAD_FAST 6 (endpoint)
104 FORMAT_VALUE 0
106 BUILD_STRING 2
108 CALL 1
110 POP_TOP

112 LOAD_CONST 12 ("Token")
114 LOAD_CONST 13 ("Token ")
116 LOAD_FAST 0 (self)
118 LOAD_ATTR 2 (api_key)
120 FORMAT_VALUE 0
122 BUILD_STRING 2
124 BUILD_TUPLE 2
126 LOAD_CONST 14 ("Bearer")
128 LOAD_CONST 15 ("Bearer ")
130 LOAD_FAST 0 (self)
132 LOAD_ATTR 2 (api_key)
134 FORMAT_VALUE 0
136 BUILD_STRING 2
138 BUILD_TUPLE 2
140 LOAD_CONST 16 ("API-Key")
142 LOAD_CONST 17 ("API-Key ")
144 LOAD_FAST 0 (self)
146 LOAD_ATTR 2 (api_key)
148 FORMAT_VALUE 0
150 BUILD_STRING 2
152 BUILD_TUPLE 2
154 LOAD_CONST 18 (('X-API-Key', 'X-API-Key'))
156 LOAD_CONST 19 ("Raw")
158 LOAD_FAST 0 (self)
160 LOAD_ATTR 2 (api_key)
162 BUILD_TUPLE 2
164 BUILD_LIST 5
166 STORE_FAST 8 (auth_formats)

168 LOAD_FAST 8 (auth_formats)
170 GET_ITER
172 FOR_ITER 557 (to 614)
174 UNPACK_SEQUENCE 2
176 STORE_FAST 9 (format_name)
178 STORE_FAST 10 (auth_format)

180 LOAD_GLOBAL 0 (logger)
182 LOAD_METHOD 1 (info)
184 LOAD_CONST 9 ("Testing ")
186 LOAD_FAST 9 (format_name)
188 FORMAT_VALUE 0
190 LOAD_CONST 20 (" format...")
192 BUILD_STRING 3
194 CALL 1
196 POP_TOP

198 NOP

200 LOAD_GLOBAL 7 (NULL + requests)
202 LOAD_ATTR 4 (Session)
204 CALL 0
206 STORE_FAST 11 (test_session)

208 LOAD_CONST 21 ("application/json")
210 LOAD_CONST 21 ("application/json")
212 LOAD_CONST 22 ("AutoCloudSkill/1.0")
214 LOAD_CONST 23 (('Content-Type', 'Accept', 'User-Agent'))
216 BUILD_CONST_KEY_MAP 3
218 STORE_FAST 12 (headers)

220 LOAD_FAST 9 (format_name)
222 LOAD_CONST 24 ("X-API-Key")
224 COMPARE_OP 2 (==)
226 POP_JUMP_FORWARD_IF_FALSE 11 (to 240)

228 LOAD_FAST 0 (self)
230 LOAD_ATTR 2 (api_key)
232 LOAD_FAST 12 (headers)
234 LOAD_CONST 24 ("X-API-Key")
236 STORE_SUBSCR
238 JUMP_FORWARD 5 (to 248)

240 LOAD_FAST 10 (auth_format)
242 LOAD_FAST 12 (headers)
244 LOAD_CONST 25 ("Authorization")
246 STORE_SUBSCR

248 LOAD_FAST 11 (test_session)
250 LOAD_ATTR 5 (headers)
252 LOAD_METHOD 6 (update)
254 LOAD_FAST 12 (headers)
256 CALL 1
258 POP_TOP

260 LOAD_FAST 11 (test_session)
262 LOAD_METHOD 7 (get)
264 LOAD_FAST 7 (url)
266 LOAD_CONST 26 (10)
268 KW_NAMES 27 (('timeout',))
270 CALL 2
272 STORE_FAST 13 (response)

274 LOAD_GLOBAL 0 (logger)
276 LOAD_METHOD 1 (info)
278 LOAD_CONST 28 ("Response status: ")
280 LOAD_FAST 13 (response)
282 LOAD_ATTR 8 (status_code)
284 FORMAT_VALUE 0
286 BUILD_STRING 2
288 CALL 1
290 POP_TOP

292 LOAD_FAST 13 (response)
294 LOAD_ATTR 8 (status_code)
296 LOAD_CONST 29 (200)
298 COMPARE_OP 2 (==)
300 POP_JUMP_FORWARD_IF_FALSE 318 (to 554)

302 LOAD_FAST 13 (response)
304 LOAD_METHOD 9 (json)
306 CALL 0
308 STORE_FAST 14 (data)

310 LOAD_GLOBAL 21 (NULL + isinstance)
312 LOAD_FAST 14 (data)
314 LOAD_GLOBAL 22 (dict)
316 CALL 2
318 POP_JUMP_FORWARD_IF_FALSE 22 (to 332)
320 LOAD_FAST 14 (data)
322 LOAD_METHOD 7 (get)
324 LOAD_CONST 30 ("results")
326 LOAD_FAST 14 (data)
328 CALL 2
330 JUMP_FORWARD 1 (to 334)
332 LOAD_FAST 14 (data)
334 STORE_FAST 15 (mask_list)

336 LOAD_GLOBAL 21 (NULL + isinstance)
338 LOAD_FAST 15 (mask_list)
340 LOAD_GLOBAL 24 (list)
342 CALL 2
344 POP_JUMP_FORWARD_IF_TRUE 7 (to 360)

346 LOAD_FAST 15 (mask_list)
348 POP_JUMP_FORWARD_IF_FALSE 3 (to 356)
350 LOAD_FAST 15 (mask_list)
352 BUILD_LIST 1
354 JUMP_FORWARD 1 (to 358)
356 BUILD_LIST 0
358 STORE_FAST 15 (mask_list)

360 LOAD_CONST 31 (True)
362 LOAD_FAST 1 (results)
364 LOAD_CONST 32 ("success")
366 STORE_SUBSCR

368 LOAD_FAST 9 (format_name)
370 FORMAT_VALUE 0
372 LOAD_CONST 33 (": ")
374 LOAD_FAST 9 (format_name)
376 LOAD_CONST 24 ("X-API-Key")
378 COMPARE_OP 3 (!=)
380 POP_JUMP_FORWARD_IF_FALSE 2 (to 386)
382 LOAD_FAST 10 (auth_format)
384 JUMP_FORWARD 1 (to 388)
386 LOAD_CONST 34 ("X-API-Key header")
388 FORMAT_VALUE 0
390 BUILD_STRING 3
392 LOAD_FAST 1 (results)
394 LOAD_CONST 35 ("auth_format")
396 STORE_SUBSCR

398 LOAD_GLOBAL 27 (NULL + len)
400 LOAD_FAST 15 (mask_list)
402 CALL 1
404 LOAD_FAST 1 (results)
406 LOAD_CONST 36 ("masks_count")
408 STORE_SUBSCR

410 LOAD_FAST 5 (base_url)
412 LOAD_FAST 1 (results)
414 LOAD_CONST 37 ("working_url")
416 STORE_SUBSCR

418 LOAD_FAST 5 (base_url)
420 LOAD_FAST 0 (self)
422 STORE_ATTR 14 (base_url)

424 LOAD_FAST 9 (format_name)
426 LOAD_CONST 24 ("X-API-Key")
428 COMPARE_OP 2 (==)
430 POP_JUMP_FORWARD_IF_FALSE 66 (to 476)

432 LOAD_FAST 0 (self)
434 LOAD_ATTR 15 (session)
436 LOAD_ATTR 5 (headers)
438 LOAD_METHOD 6 (update)
440 LOAD_CONST 24 ("X-API-Key")
442 LOAD_FAST 0 (self)
444 LOAD_ATTR 2 (api_key)
446 BUILD_MAP 1
448 CALL 1
450 POP_TOP

452 LOAD_CONST 25 ("Authorization")
454 LOAD_FAST 0 (self)
456 LOAD_ATTR 15 (session)
458 LOAD_ATTR 5 (headers)
460 CONTAINS_OP 0 (in)
462 POP_JUMP_FORWARD_IF_FALSE 13 (to 474)

464 LOAD_FAST 0 (self)
466 LOAD_ATTR 15 (session)
468 LOAD_ATTR 5 (headers)
470 LOAD_CONST 25 ("Authorization")
472 DELETE_SUBSCR
474 JUMP_FORWARD 60 (to 516)

476 LOAD_FAST 0 (self)
478 LOAD_ATTR 15 (session)
480 LOAD_ATTR 5 (headers)
482 LOAD_METHOD 6 (update)
484 LOAD_CONST 25 ("Authorization")
486 LOAD_FAST 10 (auth_format)
488 BUILD_MAP 1
490 CALL 1
492 POP_TOP

494 LOAD_CONST 24 ("X-API-Key")
496 LOAD_FAST 0 (self)
498 LOAD_ATTR 15 (session)
500 LOAD_ATTR 5 (headers)
502 CONTAINS_OP 0 (in)
504 POP_JUMP_FORWARD_IF_FALSE 13 (to 516)

506 LOAD_FAST 0 (self)
508 LOAD_ATTR 15 (session)
510 LOAD_ATTR 5 (headers)
512 LOAD_CONST 24 ("X-API-Key")
514 DELETE_SUBSCR

516 LOAD_GLOBAL 0 (logger)
518 LOAD_METHOD 1 (info)
520 LOAD_CONST 38 ("Connection test successful: ")
522 LOAD_FAST 4 (env_name)
524 FORMAT_VALUE 0
526 LOAD_CONST 39 (" - ")
528 LOAD_FAST 9 (format_name)
530 FORMAT_VALUE 0
532 BUILD_STRING 4
534 CALL 1
536 POP_TOP

538 LOAD_FAST 1 (results)
540 SWAP 2
542 POP_TOP
544 SWAP 2
546 POP_TOP
548 SWAP 2
550 POP_TOP
552 RETURN_VALUE

554 JUMP_BACKWARD 499 (to 172)
556 PUSH_EXC_INFO

558 LOAD_GLOBAL 6 (requests)
560 LOAD_ATTR 16 (RequestException)
562 CHECK_EXC_MATCH
564 POP_JUMP_FORWARD_IF_FALSE 42 (to 606)
566 STORE_FAST 16 (e)

568 LOAD_GLOBAL 0 (logger)
570 LOAD_METHOD 17 (warning)
572 LOAD_FAST 9 (format_name)
574 FORMAT_VALUE 0
576 LOAD_CONST 40 (" failed: ")
578 LOAD_FAST 16 (e)
580 FORMAT_VALUE 0
582 BUILD_STRING 3
584 CALL 1
586 POP_TOP
588 POP_EXCEPT
590 LOAD_CONST 2 (None)
592 STORE_FAST 16 (e)
594 DELETE_FAST 16 (e)
596 JUMP_BACKWARD 551 (to 172)
598 LOAD_CONST 2 (None)
600 STORE_FAST 16 (e)
602 DELETE_FAST 16 (e)
604 RERAISE 1

606 RERAISE 0
608 COPY 3
610 POP_EXCEPT
612 RERAISE 1

614 JUMP_BACKWARD 645 (to 80)

616 JUMP_BACKWARD 687 (to 46)

618 LOAD_CONST 41 ("All authentication formats and URLs failed")
620 LOAD_FAST 1 (results)
622 LOAD_CONST 42 ("error")
624 STORE_SUBSCR

626 LOAD_GLOBAL 0 (logger)
628 LOAD_METHOD 18 (error)
630 LOAD_CONST 41 ("All authentication formats and URLs failed")
632 CALL 1
634 POP_TOP

636 LOAD_FAST 1 (results)
638 RETURN_VALUE


0 NOP

2 LOAD_FAST 0 (self)
4 LOAD_ATTR 0 (base_url)
6 FORMAT_VALUE 0
8 LOAD_CONST 1 ("/api/v1/relayaddresses/")
10 LOAD_FAST 1 (mask_id)
12 FORMAT_VALUE 0
14 LOAD_CONST 2 ("/")
16 BUILD_STRING 4
18 STORE_FAST 2 (url)

20 LOAD_FAST 0 (self)
22 LOAD_ATTR 1 (session)
24 LOAD_METHOD 2 (delete)
26 LOAD_FAST 2 (url)
28 LOAD_CONST 3 (10)
30 KW_NAMES 4 (('timeout',))
32 CALL 2
34 STORE_FAST 3 (response)

36 LOAD_FAST 3 (response)
38 LOAD_METHOD 3 (raise_for_status)
40 CALL 0
42 POP_TOP

44 LOAD_CONST 5 (True)
46 RETURN_VALUE
48 PUSH_EXC_INFO

50 LOAD_GLOBAL 8 (requests)
52 LOAD_ATTR 5 (RequestException)
54 CHECK_EXC_MATCH
56 POP_JUMP_FORWARD_IF_FALSE 40 (to 96)
58 STORE_FAST 4 (e)

60 LOAD_GLOBAL 12 (logger)
62 LOAD_METHOD 7 (error)
64 LOAD_CONST 6 ("Error deleting relay mask: ")
66 LOAD_FAST 4 (e)
68 FORMAT_VALUE 0
70 BUILD_STRING 2
72 CALL 1
74 POP_TOP

76 POP_EXCEPT
78 LOAD_CONST 7 (None)
80 STORE_FAST 4 (e)
82 DELETE_FAST 4 (e)
84 LOAD_CONST 8 (False)
86 RETURN_VALUE
88 LOAD_CONST 7 (None)
90 STORE_FAST 4 (e)
92 DELETE_FAST 4 (e)
94 RERAISE 1

96 LOAD_GLOBAL 16 (Exception)
98 CHECK_EXC_MATCH
100 POP_JUMP_FORWARD_IF_FALSE 40 (to 140)
102 STORE_FAST 4 (e)

104 LOAD_GLOBAL 12 (logger)
106 LOAD_METHOD 7 (error)
108 LOAD_CONST 9 ("Unexpected error: ")
110 LOAD_FAST 4 (e)
112 FORMAT_VALUE 0
114 BUILD_STRING 2
116 CALL 1
118 POP_TOP

120 POP_EXCEPT
122 LOAD_CONST 7 (None)
124 STORE_FAST 4 (e)
126 DELETE_FAST 4 (e)
128 LOAD_CONST 8 (False)
130 RETURN_VALUE
132 LOAD_CONST 7 (None)
134 STORE_FAST 4 (e)
136 DELETE_FAST 4 (e)
138 RERAISE 1

140 RERAISE 0
142 COPY 3
144 POP_EXCEPT
146 RERAISE 1


0 NOP

2 LOAD_FAST 0 (self)
4 LOAD_METHOD 0 (list_relay_masks)
6 CALL 0
8 STORE_FAST 1 (masks)

10 LOAD_GLOBAL 3 (NULL + len)
12 LOAD_FAST 1 (masks)
14 CALL 1
16 STORE_FAST 2 (total)

18 LOAD_CONST 1 (0)
20 STORE_FAST 3 (deleted)

22 BUILD_LIST 0
24 STORE_FAST 4 (failed_ids)

26 LOAD_FAST 1 (masks)
28 GET_ITER
30 FOR_ITER 76 (to 86)
32 STORE_FAST 5 (m)

34 LOAD_FAST 5 (m)
36 LOAD_METHOD 2 (get)
38 LOAD_CONST 2 ("id")
40 CALL 1
42 STORE_FAST 6 (mid)

44 LOAD_FAST 6 (mid)
46 POP_JUMP_FORWARD_IF_TRUE 1 (to 50)

48 JUMP_BACKWARD 26 (to 30)

50 LOAD_FAST 0 (self)
52 LOAD_METHOD 3 (delete_relay_mask)
54 LOAD_FAST 6 (mid)
56 CALL 1
58 STORE_FAST 7 (ok)

60 LOAD_FAST 7 (ok)
62 POP_JUMP_FORWARD_IF_FALSE 6 (to 74)

64 LOAD_FAST 3 (deleted)
66 LOAD_CONST 3 (1)
68 BINARY_OP 0
70 STORE_FAST 3 (deleted)
72 JUMP_BACKWARD 55 (to 30)

74 LOAD_FAST 4 (failed_ids)
76 LOAD_METHOD 4 (append)
78 LOAD_FAST 6 (mid)
80 CALL 1
82 POP_TOP
84 JUMP_BACKWARD 77 (to 30)

86 LOAD_FAST 2 (total)
88 LOAD_FAST 3 (deleted)
90 LOAD_FAST 4 (failed_ids)
92 LOAD_CONST 4 (('requested', 'deleted', 'failed_ids'))
94 BUILD_CONST_KEY_MAP 3
96 RETURN_VALUE
98 PUSH_EXC_INFO

100 LOAD_GLOBAL 10 (Exception)
102 CHECK_EXC_MATCH
104 POP_JUMP_FORWARD_IF_FALSE 59 (to 160)
106 STORE_FAST 8 (e)

108 LOAD_GLOBAL 12 (logger)
110 LOAD_METHOD 7 (error)
112 LOAD_CONST 5 ("Error deleting all masks: ")
114 LOAD_FAST 8 (e)
116 FORMAT_VALUE 0
118 BUILD_STRING 2
120 CALL 1
122 POP_TOP

124 LOAD_CONST 1 (0)
126 LOAD_CONST 1 (0)
128 BUILD_LIST 0
130 LOAD_GLOBAL 17 (NULL + str)
132 LOAD_FAST 8 (e)
134 CALL 1
136 LOAD_CONST 6 (('requested', 'deleted', 'failed_ids', 'error'))
138 BUILD_CONST_KEY_MAP 4
140 SWAP 2
142 POP_EXCEPT
144 LOAD_CONST 7 (None)
146 STORE_FAST 8 (e)
148 DELETE_FAST 8 (e)
150 RETURN_VALUE
152 LOAD_CONST 7 (None)
154 STORE_FAST 8 (e)
156 DELETE_FAST 8 (e)
158 RERAISE 1

160 RERAISE 0
162 COPY 3
164 POP_EXCEPT
166 RERAISE 1


0 NOP

2 LOAD_FAST 0 (self)
4 LOAD_METHOD 0 (list_relay_masks)
6 CALL 0
8 STORE_FAST 2 (masks)

10 LOAD_GLOBAL 3 (NULL + len)
12 LOAD_FAST 2 (masks)
14 CALL 1
16 STORE_FAST 3 (count)

18 LOAD_FAST 3 (count)
20 LOAD_GLOBAL 5 (NULL + int)
22 LOAD_FAST 1 (limit)
24 CALL 1
26 COMPARE_OP 5 (>=)
28 POP_JUMP_FORWARD_IF_FALSE 47 (to 60)

30 LOAD_FAST 0 (self)
32 LOAD_METHOD 3 (delete_all_masks)
34 CALL 0
36 STORE_FAST 4 (res)

38 LOAD_CONST 1 ("purged")
40 LOAD_CONST 2 (True)
42 BUILD_MAP 1
44 STORE_FAST 5 (out)

46 LOAD_FAST 5 (out)
48 LOAD_METHOD 4 (update)
50 LOAD_FAST 4 (res)
52 CALL 1
54 POP_TOP

56 LOAD_FAST 5 (out)
58 RETURN_VALUE

60 LOAD_CONST 3 (False)
62 LOAD_FAST 3 (count)
64 LOAD_CONST 4 (('purged', 'count'))
66 BUILD_CONST_KEY_MAP 2
68 RETURN_VALUE
70 PUSH_EXC_INFO

72 LOAD_GLOBAL 10 (Exception)
74 CHECK_EXC_MATCH
76 POP_JUMP_FORWARD_IF_FALSE 57 (to 128)
78 STORE_FAST 6 (e)

80 LOAD_GLOBAL 12 (logger)
82 LOAD_METHOD 7 (error)
84 LOAD_CONST 5 ("auto_purge_if_limit_reached error: ")
86 LOAD_FAST 6 (e)
88 FORMAT_VALUE 0
90 BUILD_STRING 2
92 CALL 1
94 POP_TOP

96 LOAD_CONST 3 (False)
98 LOAD_GLOBAL 17 (NULL + str)
100 LOAD_FAST 6 (e)
102 CALL 1
104 LOAD_CONST 6 (('purged', 'error'))
106 BUILD_CONST_KEY_MAP 2
108 SWAP 2
110 POP_EXCEPT
112 LOAD_CONST 7 (None)
114 STORE_FAST 6 (e)
116 DELETE_FAST 6 (e)
118 RETURN_VALUE
120 LOAD_CONST 7 (None)
122 STORE_FAST 6 (e)
124 DELETE_FAST 6 (e)
126 RERAISE 1

128 RERAISE 0
130 COPY 3
132 POP_EXCEPT
134 RERAISE 1


0 NOP

2 LOAD_FAST 0 (self)
4 LOAD_ATTR 0 (base_url)
6 FORMAT_VALUE 0
8 LOAD_CONST 1 ("/api/v1/relayaddresses/")
10 LOAD_FAST 1 (mask_id)
12 FORMAT_VALUE 0
14 LOAD_CONST 2 ("/")
16 BUILD_STRING 4
18 STORE_FAST 4 (url)

20 BUILD_MAP 0
22 STORE_FAST 5 (data)

24 LOAD_FAST 2 (enabled)
26 POP_JUMP_FORWARD_IF_NONE 5 (to 36)

28 LOAD_FAST 2 (enabled)
30 LOAD_FAST 5 (data)
32 LOAD_CONST 4 ("enabled")
34 STORE_SUBSCR

36 LOAD_FAST 3 (description)
38 POP_JUMP_FORWARD_IF_NONE 5 (to 48)

40 LOAD_FAST 3 (description)
42 LOAD_FAST 5 (data)
44 LOAD_CONST 5 ("description")
46 STORE_SUBSCR

48 LOAD_FAST 5 (data)
50 POP_JUMP_FORWARD_IF_TRUE 2 (to 56)

52 LOAD_CONST 3 (None)
54 RETURN_VALUE

56 LOAD_FAST 0 (self)
58 LOAD_ATTR 1 (session)
60 LOAD_METHOD 2 (patch)
62 LOAD_FAST 4 (url)
64 LOAD_FAST 5 (data)
66 LOAD_CONST 6 (10)
68 KW_NAMES 7 (('json', 'timeout'))
70 CALL 3
72 STORE_FAST 6 (response)

74 LOAD_FAST 6 (response)
76 LOAD_METHOD 3 (raise_for_status)
78 CALL 0
80 POP_TOP

82 LOAD_FAST 6 (response)
84 LOAD_METHOD 4 (json)
86 CALL 0
88 STORE_FAST 7 (mask_data)

90 LOAD_FAST 7 (mask_data)
92 LOAD_METHOD 5 (get)
94 LOAD_CONST 8 ("id")
96 CALL 1
98 LOAD_FAST 7 (mask_data)
100 LOAD_METHOD 5 (get)
102 LOAD_CONST 9 ("address")
104 CALL 1
106 LOAD_FAST 7 (mask_data)
108 LOAD_METHOD 5 (get)
110 LOAD_CONST 10 ("domain")
112 CALL 1
114 LOAD_FAST 7 (mask_data)
116 LOAD_METHOD 5 (get)
118 LOAD_CONST 11 ("full_address")
120 CALL 1
122 LOAD_FAST 7 (mask_data)
124 LOAD_METHOD 5 (get)
126 LOAD_CONST 5 ("description")
128 CALL 1
130 LOAD_FAST 7 (mask_data)
132 LOAD_METHOD 5 (get)
134 LOAD_CONST 4 ("enabled")
136 LOAD_CONST 12 (True)
138 CALL 2
140 LOAD_FAST 7 (mask_data)
142 LOAD_METHOD 5 (get)
144 LOAD_CONST 13 ("created_at")
146 CALL 1
148 LOAD_CONST 14 (('id', 'address', 'domain', 'full_address', 'description', 'enabled', 'created_at'))
150 BUILD_CONST_KEY_MAP 7
152 RETURN_VALUE
154 PUSH_EXC_INFO

156 LOAD_GLOBAL 12 (requests)
158 LOAD_ATTR 7 (RequestException)
160 CHECK_EXC_MATCH
162 POP_JUMP_FORWARD_IF_FALSE 40 (to 202)
164 STORE_FAST 8 (e)

166 LOAD_GLOBAL 16 (logger)
168 LOAD_METHOD 9 (error)
170 LOAD_CONST 15 ("Error updating relay mask: ")
172 LOAD_FAST 8 (e)
174 FORMAT_VALUE 0
176 BUILD_STRING 2
178 CALL 1
180 POP_TOP
182 POP_EXCEPT
184 LOAD_CONST 3 (None)
186 STORE_FAST 8 (e)
188 DELETE_FAST 8 (e)
190 LOAD_CONST 3 (None)
192 RETURN_VALUE
194 LOAD_CONST 3 (None)
196 STORE_FAST 8 (e)
198 DELETE_FAST 8 (e)
200 RERAISE 1

202 LOAD_GLOBAL 20 (Exception)
204 CHECK_EXC_MATCH
206 POP_JUMP_FORWARD_IF_FALSE 40 (to 246)
208 STORE_FAST 8 (e)

210 LOAD_GLOBAL 16 (logger)
212 LOAD_METHOD 9 (error)
214 LOAD_CONST 16 ("Unexpected error: ")
216 LOAD_FAST 8 (e)
218 FORMAT_VALUE 0
220 BUILD_STRING 2
222 CALL 1
224 POP_TOP
226 POP_EXCEPT
228 LOAD_CONST 3 (None)
230 STORE_FAST 8 (e)
232 DELETE_FAST 8 (e)
234 LOAD_CONST 3 (None)
236 RETURN_VALUE
238 LOAD_CONST 3 (None)
240 STORE_FAST 8 (e)
242 DELETE_FAST 8 (e)
244 RERAISE 1

246 RERAISE 0
248 COPY 3
250 POP_EXCEPT
252 RERAISE 1


0 NOP

2 LOAD_FAST 0 (self)
4 LOAD_ATTR 0 (base_url)
6 FORMAT_VALUE 0
8 LOAD_CONST 1 ("/api/v1/relayaddresses/")
10 LOAD_FAST 1 (mask_id)
12 FORMAT_VALUE 0
14 LOAD_CONST 2 ("/")
16 BUILD_STRING 4
18 STORE_FAST 2 (url)

20 LOAD_FAST 0 (self)
22 LOAD_ATTR 1 (session)
24 LOAD_METHOD 2 (get)
26 LOAD_FAST 2 (url)
28 LOAD_CONST 3 (10)
30 KW_NAMES 4 (('timeout',))
32 CALL 2
34 STORE_FAST 3 (response)

36 LOAD_FAST 3 (response)
38 LOAD_METHOD 3 (raise_for_status)
40 CALL 0
42 POP_TOP

44 LOAD_FAST 3 (response)
46 LOAD_METHOD 4 (json)
48 CALL 0
50 STORE_FAST 4 (mask_data)

52 LOAD_FAST 4 (mask_data)
54 LOAD_METHOD 2 (get)
56 LOAD_CONST 5 ("id")
58 CALL 1
60 LOAD_FAST 4 (mask_data)
62 LOAD_METHOD 2 (get)
64 LOAD_CONST 6 ("address")
66 CALL 1
68 LOAD_FAST 4 (mask_data)
70 LOAD_METHOD 2 (get)
72 LOAD_CONST 7 ("domain")
74 CALL 1
76 LOAD_FAST 4 (mask_data)
78 LOAD_METHOD 2 (get)
80 LOAD_CONST 8 ("full_address")
82 CALL 1
84 LOAD_FAST 4 (mask_data)
86 LOAD_METHOD 2 (get)
88 LOAD_CONST 9 ("description")
90 CALL 1
92 LOAD_FAST 4 (mask_data)
94 LOAD_METHOD 2 (get)
96 LOAD_CONST 10 ("enabled")
98 LOAD_CONST 11 (True)
100 CALL 2
102 LOAD_FAST 4 (mask_data)
104 LOAD_METHOD 2 (get)
106 LOAD_CONST 12 ("created_at")
108 CALL 1
110 LOAD_FAST 4 (mask_data)
112 LOAD_METHOD 2 (get)
114 LOAD_CONST 13 ("num_forwarded")
116 LOAD_CONST 14 (0)
118 CALL 2
120 LOAD_FAST 4 (mask_data)
122 LOAD_METHOD 2 (get)
124 LOAD_CONST 15 ("num_blocked")
126 LOAD_CONST 14 (0)
128 CALL 2
130 LOAD_CONST 16 (('id', 'address', 'domain', 'full_address', 'description', 'enabled', 'created_at', 'num_forwarded', 'num_blocked'))
132 BUILD_CONST_KEY_MAP 9
134 RETURN_VALUE
136 PUSH_EXC_INFO

138 LOAD_GLOBAL 10 (requests)
140 LOAD_ATTR 6 (RequestException)
142 CHECK_EXC_MATCH
144 POP_JUMP_FORWARD_IF_FALSE 40 (to 184)
146 STORE_FAST 5 (e)

148 LOAD_GLOBAL 14 (logger)
150 LOAD_METHOD 8 (error)
152 LOAD_CONST 17 ("Error getting relay mask details: ")
154 LOAD_FAST 5 (e)
156 FORMAT_VALUE 0
158 BUILD_STRING 2
160 CALL 1
162 POP_TOP
164 POP_EXCEPT
166 LOAD_CONST 18 (None)
168 STORE_FAST 5 (e)
170 DELETE_FAST 5 (e)
172 LOAD_CONST 18 (None)
174 RETURN_VALUE
176 LOAD_CONST 18 (None)
178 STORE_FAST 5 (e)
180 DELETE_FAST 5 (e)
182 RERAISE 1

184 LOAD_GLOBAL 18 (Exception)
186 CHECK_EXC_MATCH
188 POP_JUMP_FORWARD_IF_FALSE 40 (to 228)
190 STORE_FAST 5 (e)

192 LOAD_GLOBAL 14 (logger)
194 LOAD_METHOD 8 (error)
196 LOAD_CONST 19 ("Unexpected error: ")
198 LOAD_FAST 5 (e)
200 FORMAT_VALUE 0
202 BUILD_STRING 2
204 CALL 1
206 POP_TOP
208 POP_EXCEPT
210 LOAD_CONST 18 (None)
212 STORE_FAST 5 (e)
214 DELETE_FAST 5 (e)
216 LOAD_CONST 18 (None)
218 RETURN_VALUE
220 LOAD_CONST 18 (None)
222 STORE_FAST 5 (e)
224 DELETE_FAST 5 (e)
226 RERAISE 1

228 RERAISE 0
230 COPY 3
232 POP_EXCEPT
234 RERAISE 1