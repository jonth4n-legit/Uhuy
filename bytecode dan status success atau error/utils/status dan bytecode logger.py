Sorry: IndentationError: unexpected indent (indented_0.py, line 27)

<module>: Success: Equal

***<module>.setup_logger: Failure: Compilation Error

***<module>.log_user_action: Failure: Compilation Error

***<module>.log_user_action.<listcomp>, None: Failure: Missing bytecode

***<module>.log_automation_step: Failure: Compilation Error

***<module>.log_automation_step.<listcomp>, None: Failure: Missing bytecode


0 LOAD_CONST 0 ("\nUtility untuk logging\n")
2 STORE_NAME 0 (__doc__)

4 LOAD_CONST 1 (0)
6 LOAD_CONST 2 (None)
8 IMPORT_NAME 1 (logging)
10 STORE_NAME 1 (logging)

12 LOAD_CONST 1 (0)
14 LOAD_CONST 2 (None)
16 IMPORT_NAME 2 (os)
18 STORE_NAME 2 (os)

20 LOAD_CONST 1 (0)
22 LOAD_CONST 3 (('datetime',))
24 IMPORT_NAME 3 (datetime)
26 IMPORT_FROM 3 (datetime)
28 STORE_NAME 3 (datetime)
30 POP_TOP

32 LOAD_CONST 1 (0)
34 LOAD_CONST 4 (('settings',))
36 IMPORT_NAME 4 (config.settings)
38 IMPORT_FROM 5 (settings)
40 STORE_NAME 5 (settings)
42 POP_TOP

44 LOAD_CONST 16 (('autocloudskill',))
46 LOAD_CONST 6 ("name")
48 LOAD_NAME 6 (str)
50 LOAD_CONST 7 ("return")
52 LOAD_NAME 1 (logging)
54 LOAD_ATTR 7 (Logger)
56 BUILD_TUPLE 4
58 LOAD_CONST 8 (code object setup_logger)
60 MAKE_FUNCTION 5 (default, annotation)
62 STORE_NAME 8 (setup_logger)

64 LOAD_CONST 17 ((None,))
66 LOAD_CONST 9 ("logger")
68 LOAD_NAME 1 (logging)
70 LOAD_ATTR 7 (Logger)
72 LOAD_CONST 10 ("action")
74 LOAD_NAME 6 (str)
76 LOAD_CONST 11 ("details")
78 LOAD_NAME 9 (dict)
80 BUILD_TUPLE 6
82 LOAD_CONST 12 (code object log_user_action)
84 MAKE_FUNCTION 5 (default, annotation)
86 STORE_NAME 10 (log_user_action)

88 LOAD_CONST 17 ((None,))
90 LOAD_CONST 9 ("logger")
92 LOAD_NAME 1 (logging)
94 LOAD_ATTR 7 (Logger)
96 LOAD_CONST 13 ("step")
98 LOAD_NAME 6 (str)
100 LOAD_CONST 14 ("status")
102 LOAD_NAME 6 (str)
104 LOAD_CONST 11 ("details")
106 LOAD_NAME 9 (dict)
108 BUILD_TUPLE 8
110 LOAD_CONST 15 (code object log_automation_step)
112 MAKE_FUNCTION 5 (default, annotation)
114 STORE_NAME 11 (log_automation_step)

116 PUSH_NULL
118 LOAD_NAME 8 (setup_logger)
120 CALL 0
122 STORE_NAME 12 (main_logger)
124 LOAD_CONST 2 (None)
126 RETURN_VALUE


0 LOAD_GLOBAL 1 (NULL + logging)
2 LOAD_ATTR 1 (getLogger)
4 LOAD_FAST 0 (name)
6 CALL 1
8 STORE_FAST 1 (logger)

10 LOAD_FAST 1 (logger)
12 LOAD_ATTR 2 (handlers)
14 POP_JUMP_FORWARD_IF_FALSE 2 (to 20)

16 LOAD_FAST 1 (logger)
18 RETURN_VALUE

20 LOAD_GLOBAL 7 (NULL + getattr)
22 LOAD_GLOBAL 0 (logging)
24 LOAD_GLOBAL 8 (settings)
26 LOAD_ATTR 5 (LOG_LEVEL)
28 LOAD_METHOD 6 (upper)
30 CALL 0
32 LOAD_GLOBAL 0 (logging)
34 LOAD_ATTR 7 (INFO)
36 CALL 3
38 STORE_FAST 2 (level)

40 LOAD_FAST 1 (logger)
42 LOAD_METHOD 8 (setLevel)
44 LOAD_FAST 2 (level)
46 CALL 1
48 POP_TOP

50 LOAD_GLOBAL 1 (NULL + logging)
52 LOAD_ATTR 9 (Formatter)

54 LOAD_CONST 1 ("%(asctime)s - %(name)s - %(levelname)s - %(message)s")

56 LOAD_CONST 2 ("%Y-%m-%d %H:%M:%S")
58 KW_NAMES 3 (('datefmt',))
60 CALL 2
62 STORE_FAST 3 (formatter)

64 LOAD_GLOBAL 1 (NULL + logging)
66 LOAD_ATTR 10 (StreamHandler)
68 CALL 0
70 STORE_FAST 4 (console_handler)

72 LOAD_FAST 4 (console_handler)
74 LOAD_METHOD 8 (setLevel)
76 LOAD_FAST 2 (level)
78 CALL 1
80 POP_TOP

82 LOAD_FAST 4 (console_handler)
84 LOAD_METHOD 11 (setFormatter)
86 LOAD_FAST 3 (formatter)
88 CALL 1
90 POP_TOP

92 LOAD_FAST 1 (logger)
94 LOAD_METHOD 12 (addHandler)
96 LOAD_FAST 4 (console_handler)
98 CALL 1
100 POP_TOP

102 LOAD_GLOBAL 8 (settings)
104 LOAD_ATTR 13 (AUTO_SAVE_LOGS)
106 POP_JUMP_FORWARD_IF_FALSE 527 (to 456)

108 NOP

110 LOAD_CONST 4 (None)
112 STORE_FAST 5 (base_logs)

114 NOP

116 LOAD_GLOBAL 28 (os)
118 LOAD_ATTR 15 (environ)
120 LOAD_METHOD 16 (get)
122 LOAD_CONST 5 ("LOCALAPPDATA")
124 CALL 1
126 STORE_FAST 5 (base_logs)
128 JUMP_FORWARD 18 (to 156)
130 PUSH_EXC_INFO

132 LOAD_GLOBAL 34 (Exception)
134 CHECK_EXC_MATCH
136 POP_JUMP_FORWARD_IF_FALSE 5 (to 148)
138 POP_TOP

140 LOAD_CONST 4 (None)
142 STORE_FAST 5 (base_logs)
144 POP_EXCEPT
146 JUMP_FORWARD 4 (to 156)

148 RERAISE 0
150 COPY 3
152 POP_EXCEPT
154 RERAISE 1

156 LOAD_FAST 5 (base_logs)
158 POP_JUMP_FORWARD_IF_TRUE 82 (to 214)

160 NOP

162 LOAD_GLOBAL 28 (os)
164 LOAD_ATTR 18 (path)
166 LOAD_METHOD 19 (join)
168 LOAD_GLOBAL 28 (os)
170 LOAD_ATTR 18 (path)
172 LOAD_METHOD 20 (expanduser)
174 LOAD_CONST 6 ("~")
176 CALL 1
178 LOAD_CONST 7 ("AppData")
180 LOAD_CONST 8 ("Local")
182 CALL 3
184 STORE_FAST 5 (base_logs)
186 JUMP_FORWARD 18 (to 214)
188 PUSH_EXC_INFO

190 LOAD_GLOBAL 34 (Exception)
192 CHECK_EXC_MATCH
194 POP_JUMP_FORWARD_IF_FALSE 5 (to 206)
196 POP_TOP

198 LOAD_CONST 4 (None)
200 STORE_FAST 5 (base_logs)
202 POP_EXCEPT
204 JUMP_FORWARD 4 (to 214)

206 RERAISE 0
208 COPY 3
210 POP_EXCEPT
212 RERAISE 1

214 LOAD_FAST 5 (base_logs)
216 POP_JUMP_FORWARD_IF_TRUE 19 (to 226)

218 LOAD_GLOBAL 29 (NULL + os)
220 LOAD_ATTR 21 (getcwd)
222 CALL 0
224 STORE_FAST 5 (base_logs)

226 LOAD_GLOBAL 28 (os)
228 LOAD_ATTR 18 (path)
230 LOAD_METHOD 19 (join)
232 LOAD_FAST 5 (base_logs)
234 LOAD_CONST 9 ("AutoCloudSkill")
236 LOAD_CONST 10 ("logs")
238 CALL 3
240 STORE_FAST 6 (logs_dir)

242 LOAD_GLOBAL 28 (os)
244 LOAD_ATTR 18 (path)
246 LOAD_METHOD 22 (exists)
248 LOAD_FAST 6 (logs_dir)
250 CALL 1
252 POP_JUMP_FORWARD_IF_TRUE 22 (to 268)

254 LOAD_GLOBAL 29 (NULL + os)
256 LOAD_ATTR 23 (makedirs)
258 LOAD_FAST 6 (logs_dir)
260 LOAD_CONST 11 (True)
262 KW_NAMES 12 (('exist_ok',))
264 CALL 2
266 POP_TOP

268 LOAD_GLOBAL 49 (NULL + datetime)
270 LOAD_ATTR 25 (now)
272 CALL 0
274 LOAD_METHOD 26 (strftime)
276 LOAD_CONST 13 ("%Y%m%d")
278 CALL 1
280 STORE_FAST 7 (timestamp)

282 LOAD_GLOBAL 7 (NULL + getattr)
284 LOAD_GLOBAL 8 (settings)
286 LOAD_CONST 14 ("LOG_FILE")
288 LOAD_CONST 15 ("app.log")
290 CALL 3
292 STORE_FAST 8 (log_name)

294 LOAD_GLOBAL 28 (os)
296 LOAD_ATTR 18 (path)
298 LOAD_METHOD 19 (join)
300 LOAD_FAST 6 (logs_dir)
302 LOAD_GLOBAL 55 (NULL + str)
304 LOAD_FAST 8 (log_name)
306 CALL 1
308 LOAD_METHOD 28 (replace)
310 LOAD_CONST 16 (".log")
312 LOAD_CONST 17 ("")
314 CALL 2
316 FORMAT_VALUE 0
318 LOAD_CONST 18 ("_")
320 LOAD_FAST 7 (timestamp)
322 FORMAT_VALUE 0
324 LOAD_CONST 16 (".log")
326 BUILD_STRING 4
328 CALL 2
330 STORE_FAST 9 (log_file)

332 LOAD_GLOBAL 1 (NULL + logging)
334 LOAD_ATTR 29 (FileHandler)
336 LOAD_FAST 9 (log_file)
338 LOAD_CONST 19 ("utf-8")
340 KW_NAMES 20 (('encoding',))
342 CALL 2
344 STORE_FAST 10 (file_handler)

346 LOAD_FAST 10 (file_handler)
348 LOAD_METHOD 8 (setLevel)
350 LOAD_FAST 2 (level)
352 CALL 1
354 POP_TOP

356 LOAD_FAST 10 (file_handler)
358 LOAD_METHOD 11 (setFormatter)
360 LOAD_FAST 3 (formatter)
362 CALL 1
364 POP_TOP

366 LOAD_FAST 1 (logger)
368 LOAD_METHOD 12 (addHandler)
370 LOAD_FAST 10 (file_handler)
372 CALL 1
374 POP_TOP
376 JUMP_FORWARD 65 (to 456)
378 PUSH_EXC_INFO

380 LOAD_GLOBAL 34 (Exception)
382 CHECK_EXC_MATCH
384 POP_JUMP_FORWARD_IF_FALSE 52 (to 448)
386 STORE_FAST 11 (e)

388 NOP

390 LOAD_FAST 1 (logger)
392 LOAD_METHOD 30 (warning)
394 LOAD_CONST 21 ("File logger disabled: ")
396 LOAD_FAST 11 (e)
398 FORMAT_VALUE 0
400 BUILD_STRING 2
402 CALL 1
404 POP_TOP
406 JUMP_FORWARD 16 (to 430)
408 PUSH_EXC_INFO

410 LOAD_GLOBAL 34 (Exception)
412 CHECK_EXC_MATCH
414 POP_JUMP_FORWARD_IF_FALSE 3 (to 422)
416 POP_TOP

418 POP_EXCEPT
420 JUMP_FORWARD 4 (to 430)

422 RERAISE 0
424 COPY 3
426 POP_EXCEPT
428 RERAISE 1
430 POP_EXCEPT
432 LOAD_CONST 4 (None)
434 STORE_FAST 11 (e)
436 DELETE_FAST 11 (e)
438 JUMP_FORWARD 8 (to 456)
440 LOAD_CONST 4 (None)
442 STORE_FAST 11 (e)
444 DELETE_FAST 11 (e)
446 RERAISE 1

448 RERAISE 0
450 COPY 3
452 POP_EXCEPT
454 RERAISE 1

456 LOAD_FAST 1 (logger)
458 RETURN_VALUE


0 LOAD_CONST 1 ("USER_ACTION: ")
2 LOAD_FAST 1 (action)
4 FORMAT_VALUE 0
6 BUILD_STRING 2
8 STORE_FAST 3 (log_msg)

10 LOAD_FAST 2 (details)
12 POP_JUMP_FORWARD_IF_FALSE 57 (to 50)

14 LOAD_CONST 2 (", ")
16 LOAD_METHOD 0 (join)
18 LOAD_CONST 3 (code object <listcomp>)
20 MAKE_FUNCTION 0 (No arguments)
22 LOAD_FAST 2 (details)
24 LOAD_METHOD 1 (items)
26 CALL 0
28 GET_ITER
30 CALL 0
32 CALL 1
34 STORE_FAST 4 (detail_str)

36 LOAD_FAST 3 (log_msg)
38 LOAD_CONST 4 (" | ")
40 LOAD_FAST 4 (detail_str)
42 FORMAT_VALUE 0
44 BUILD_STRING 2
46 BINARY_OP 13
48 STORE_FAST 3 (log_msg)

50 LOAD_FAST 0 (logger)
52 LOAD_METHOD 2 (info)
54 LOAD_FAST 3 (log_msg)
56 CALL 1
58 POP_TOP
60 LOAD_CONST 5 (None)
62 RETURN_VALUE


0 BUILD_LIST 0
2 LOAD_FAST 0 (.0)
4 FOR_ITER 12 (to 28)
6 UNPACK_SEQUENCE 2
8 STORE_FAST 1 (k)
10 STORE_FAST 2 (v)
12 LOAD_FAST 1 (k)
14 FORMAT_VALUE 0
16 LOAD_CONST 0 ("=")
18 LOAD_FAST 2 (v)
20 FORMAT_VALUE 0
22 BUILD_STRING 3
24 LIST_APPEND 2
26 JUMP_BACKWARD 13 (to 4)
28 RETURN_VALUE


0 LOAD_CONST 1 ("AUTOMATION: ")
2 LOAD_FAST 1 (step)
4 FORMAT_VALUE 0
6 LOAD_CONST 2 (" - ")
8 LOAD_FAST 2 (status)
10 FORMAT_VALUE 0
12 BUILD_STRING 4
14 STORE_FAST 4 (log_msg)

16 LOAD_FAST 3 (details)
18 POP_JUMP_FORWARD_IF_FALSE 57 (to 56)

20 LOAD_CONST 3 (", ")
22 LOAD_METHOD 0 (join)
24 LOAD_CONST 4 (code object <listcomp>)
26 MAKE_FUNCTION 0 (No arguments)
28 LOAD_FAST 3 (details)
30 LOAD_METHOD 1 (items)
32 CALL 0
34 GET_ITER
36 CALL 0
38 CALL 1
40 STORE_FAST 5 (detail_str)

42 LOAD_FAST 4 (log_msg)
44 LOAD_CONST 5 (" | ")
46 LOAD_FAST 5 (detail_str)
48 FORMAT_VALUE 0
50 BUILD_STRING 2
52 BINARY_OP 13
54 STORE_FAST 4 (log_msg)

56 LOAD_FAST 2 (status)
58 LOAD_CONST 6 ("ERROR")
60 COMPARE_OP 2 (==)
62 POP_JUMP_FORWARD_IF_FALSE 23 (to 78)

64 LOAD_FAST 0 (logger)
66 LOAD_METHOD 2 (error)
68 LOAD_FAST 4 (log_msg)
70 CALL 1
72 POP_TOP
74 LOAD_CONST 8 (None)
76 RETURN_VALUE

78 LOAD_FAST 2 (status)
80 LOAD_CONST 7 ("SUCCESS")
82 COMPARE_OP 2 (==)
84 POP_JUMP_FORWARD_IF_FALSE 23 (to 100)

86 LOAD_FAST 0 (logger)
88 LOAD_METHOD 3 (info)
90 LOAD_FAST 4 (log_msg)
92 CALL 1
94 POP_TOP
96 LOAD_CONST 8 (None)
98 RETURN_VALUE

100 LOAD_FAST 0 (logger)
102 LOAD_METHOD 4 (debug)
104 LOAD_FAST 4 (log_msg)
106 CALL 1
108 POP_TOP
110 LOAD_CONST 8 (None)
112 RETURN_VALUE


0 BUILD_LIST 0
2 LOAD_FAST 0 (.0)
4 FOR_ITER 12 (to 28)
6 UNPACK_SEQUENCE 2
8 STORE_FAST 1 (k)
10 STORE_FAST 2 (v)
12 LOAD_FAST 1 (k)
14 FORMAT_VALUE 0
16 LOAD_CONST 0 ("=")
18 LOAD_FAST 2 (v)
20 FORMAT_VALUE 0
22 BUILD_STRING 3
24 LIST_APPEND 2
26 JUMP_BACKWARD 13 (to 4)
28 RETURN_VALUE